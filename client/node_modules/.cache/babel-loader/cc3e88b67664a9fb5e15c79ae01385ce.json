{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/thorhlavaty/DigitalCrafts/react-character-builder/src/components/FinishingTouches/FinishingTouches.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Button, Form, Header, Segment } from 'semantic-ui-react';\nimport { setName } from '../../redux/actions';\nimport Attributes from './Attributes';\nexport default function FinishingTouches() {\n  _s();\n\n  const [nameChange, setNameChange] = useState('');\n  const race = useSelector(state => state.race);\n  const classSelection = useSelector(state => state.classSelection);\n  const name = useSelector(state => state.name);\n  const dispatch = useDispatch();\n\n  function handleNameSelect(nameChange) {\n    dispatch(setName(nameChange));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      as: \"h1\",\n      style: {\n        marginTop: \"5px\"\n      },\n      children: [\"I see, a\", race === 'elf' && 'n', \" \", race, \" \", classSelection, \"! \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 74\n      }, this), \" Now for the finishing touches...\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Segment, {\n      textAlign: \"left\",\n      inverted: true,\n      children: [/*#__PURE__*/_jsxDEV(Form, {\n        inverted: true,\n        children: [/*#__PURE__*/_jsxDEV(Form.Field, {\n          width: \"6\",\n          children: [name === '' && /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"What will this character's name be?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 17\n          }, this), name !== '' && /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"This character's name is \", name, \".\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            placeholder: \"Name\",\n            onChange: e => {\n              setNameChange(e.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => handleNameSelect(nameChange),\n          children: \"Glory to their Name!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Attributes, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this);\n}\n\n_s(FinishingTouches, \"aouJsuaGZi6dvO54P3oJJ/RUG+Y=\", false, function () {\n  return [useSelector, useSelector, useSelector, useDispatch];\n});\n\n_c = FinishingTouches;\n\nvar _c;\n\n$RefreshReg$(_c, \"FinishingTouches\");","map":{"version":3,"sources":["/Users/thorhlavaty/DigitalCrafts/react-character-builder/src/components/FinishingTouches/FinishingTouches.js"],"names":["React","useState","useDispatch","useSelector","Button","Form","Header","Segment","setName","Attributes","FinishingTouches","nameChange","setNameChange","race","state","classSelection","name","dispatch","handleNameSelect","marginTop","e","target","value"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,MAAvB,EAA+BC,OAA/B,QAA8C,mBAA9C;AACA,SAASC,OAAT,QAAwB,qBAAxB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AAEA,eAAe,SAASC,gBAAT,GAA4B;AAAA;;AACvC,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BX,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAMY,IAAI,GAAGV,WAAW,CAAEW,KAAD,IAAUA,KAAK,CAACD,IAAjB,CAAxB;AACA,QAAME,cAAc,GAAGZ,WAAW,CAAEW,KAAD,IAAUA,KAAK,CAACC,cAAjB,CAAlC;AACA,QAAMC,IAAI,GAAGb,WAAW,CAAEW,KAAD,IAAWA,KAAK,CAACE,IAAlB,CAAxB;AACA,QAAMC,QAAQ,GAAGf,WAAW,EAA5B;;AAEA,WAASgB,gBAAT,CAA0BP,UAA1B,EAAsC;AAClCM,IAAAA,QAAQ,CAACT,OAAO,CAACG,UAAD,CAAR,CAAR;AACH;;AAED,sBACI;AAAA,4BACI,QAAC,MAAD;AAAQ,MAAA,EAAE,EAAC,IAAX;AAAgB,MAAA,KAAK,EAAE;AAACQ,QAAAA,SAAS,EAAC;AAAX,OAAvB;AAAA,6BACaN,IAAI,KAAK,KAAT,IAAkB,GAD/B,OACqCA,IADrC,OAC4CE,cAD5C,qBAC6D;AAAA;AAAA;AAAA;AAAA,cAD7D;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAII,QAAC,OAAD;AAAS,MAAA,SAAS,EAAC,MAAnB;AAA0B,MAAA,QAAQ,MAAlC;AAAA,8BACA,QAAC,IAAD;AAAM,QAAA,QAAQ,MAAd;AAAA,gCACA,QAAC,IAAD,CAAM,KAAN;AAAY,UAAA,KAAK,EAAC,GAAlB;AAAA,qBACMC,IAAI,KAAK,EAAT,iBACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,EAGMA,IAAI,KAAK,EAAT,iBACF;AAAA,oDAA8BA,IAA9B;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJJ,eAKI;AAAO,YAAA,WAAW,EAAC,MAAnB;AAA0B,YAAA,QAAQ,EAAGI,CAAD,IAAO;AAACR,cAAAA,aAAa,CAACQ,CAAC,CAACC,MAAF,CAASC,KAAV,CAAb;AAA8B;AAA1E;AAAA;AAAA;AAAA;AAAA,kBALJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADA,eAQA,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAE,MAAMJ,gBAAgB,CAACP,UAAD,CAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBARA;AAAA;AAAA;AAAA;AAAA;AAAA,cADA,eAWA,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,cAXA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAoBH;;GA/BuBD,gB;UAEPP,W,EACUA,W,EACVA,W,EACID,W;;;KALGQ,gB","sourcesContent":["import React, { useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Button, Form, Header, Segment } from 'semantic-ui-react'\nimport { setName } from '../../redux/actions'\nimport Attributes from './Attributes'\n\nexport default function FinishingTouches() {\n    const [nameChange, setNameChange] = useState('')\n    const race = useSelector((state)=> state.race)\n    const classSelection = useSelector((state)=> state.classSelection)\n    const name = useSelector((state) => state.name)\n    const dispatch = useDispatch()\n\n    function handleNameSelect(nameChange) {\n        dispatch(setName(nameChange))\n    }\n\n    return (\n        <div>\n            <Header as=\"h1\" style={{marginTop:\"5px\"}}>\n                I see, a{race === 'elf' && 'n'} {race} {classSelection}! <br /> Now for the finishing touches...\n            </Header>\n            <Segment textAlign='left' inverted>\n            <Form inverted>\n            <Form.Field width=\"6\">\n                { name === '' &&\n                <h3>What will this character's name be?</h3>}\n                { name !== '' &&\n                <h3>This character's name is {name}.</h3>}\n                <input placeholder='Name' onChange={(e) => {setNameChange(e.target.value)}}/>\n            </Form.Field>\n            <Button onClick={() => handleNameSelect(nameChange)}>Glory to their Name!</Button>\n            </Form>\n            <Attributes />\n            </Segment>\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}