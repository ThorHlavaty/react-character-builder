{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/thorhlavaty/DigitalCrafts/react-character-builder/src/components/races/RaceCard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react'; // import { useDispatch } from 'react-redux'\n\nimport { Button, Card, Grid, GridColumn, Image, Modal, Segment } from 'semantic-ui-react'; // import { setRaces } from '../../redux/actions'\n\nimport 'semantic-ui-css/semantic.min.css';\nimport { useHistory } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { setClass, setName, setRace } from '../../redux/actions';\nimport HalflingModal from './HalflingModal';\nexport default function RaceCard(props) {\n  _s();\n\n  const [raceData, setRaceData] = useState([]);\n  const [open, setOpen] = useState(false);\n  const dispatch = useDispatch();\n  const history = useHistory();\n  useEffect(() => {\n    fetch(`https://www.dnd5eapi.co/api/races/${props.race}`).then(res => res.json()).then(data => {\n      dispatch(setRace(''));\n      dispatch(setClass(''));\n      dispatch(setName(''));\n      setRaceData(data);\n    });\n  }, [props]);\n\n  function handleSelection(race) {\n    dispatch(setRace(race))(race === 'half-elf' ? setOpen(true) : history.push('/classes'));\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      celled: true,\n      children: /*#__PURE__*/_jsxDEV(Grid.Row, {\n        children: [/*#__PURE__*/_jsxDEV(Grid.Column, {\n          width: 4,\n          children: /*#__PURE__*/_jsxDEV(Image, {\n            src: `/racesImages/${raceData.index}.jpg`,\n            alternate: \"\",\n            fluid: true,\n            ui: false\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Grid.Column, {\n          width: 12,\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            style: {\n              textAlign: \"left\",\n              borderBottom: \"1px solid black\"\n            },\n            children: [raceData.name, /*#__PURE__*/_jsxDEV(Button, {\n              color: \"red\",\n              style: {\n                marginLeft: \"10px\"\n              },\n              onClick: () => handleSelection(raceData.index),\n              children: \"+select race\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 32\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              textAlign: \"left\",\n              fontSize: \"20px\"\n            },\n            children: [\"Size: \", raceData.size]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              textAlign: \"left\",\n              fontSize: \"18px\"\n            },\n            children: raceData.alignment\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              textAlign: \"left\",\n              fontSize: \"18px\"\n            },\n            children: raceData.size_description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      onClose: () => setOpen(false),\n      onOpen: () => setOpen(true),\n      open: open,\n      children: /*#__PURE__*/_jsxDEV(HalflingModal, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(RaceCard, \"pSjijgicrXt6yuK10LrT9pJ3WDQ=\", false, function () {\n  return [useDispatch, useHistory];\n});\n\n_c = RaceCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"RaceCard\");","map":{"version":3,"sources":["/Users/thorhlavaty/DigitalCrafts/react-character-builder/src/components/races/RaceCard.js"],"names":["React","useEffect","useState","Button","Card","Grid","GridColumn","Image","Modal","Segment","useHistory","useDispatch","setClass","setName","setRace","HalflingModal","RaceCard","props","raceData","setRaceData","open","setOpen","dispatch","history","fetch","race","then","res","json","data","handleSelection","push","index","textAlign","borderBottom","name","marginLeft","fontSize","size","alignment","size_description"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\n// import { useDispatch } from 'react-redux'\nimport { Button, Card, Grid, GridColumn, Image, Modal, Segment } from 'semantic-ui-react'\n// import { setRaces } from '../../redux/actions'\nimport 'semantic-ui-css/semantic.min.css'\n\nimport {  useHistory } from 'react-router-dom'\nimport { useDispatch } from 'react-redux'\nimport { setClass, setName, setRace } from '../../redux/actions'\nimport HalflingModal from './HalflingModal'\n\n\n\nexport default function RaceCard(props) {\n    const [raceData, setRaceData] = useState([])\n    const [open, setOpen] = useState(false)\n    const dispatch = useDispatch()\n    const history = useHistory()\n    \n    useEffect(() => {\n        fetch(`https://www.dnd5eapi.co/api/races/${props.race}`)\n          .then(res => res.json())\n          .then(data => {\n            dispatch(setRace(''))\n            dispatch(setClass(''))\n            dispatch(setName(''))\n            setRaceData(data);\n          })\n      }, [props,])\n    \n    function handleSelection(race){\n        dispatch(setRace(race))\n        (race === 'half-elf' ? setOpen(true) : history.push('/classes'))\n        \n    } \n\n    return (\n            <>\n            <Grid celled>\n\n        \n            <Grid.Row> \n                <Grid.Column width={4}>\n            <Image src={`/racesImages/${raceData.index}.jpg`} alternate='' fluid ui={false} />\n                </Grid.Column> \n            \n            <Grid.Column width={12}>\n            \n                <h2 style={{textAlign:\"left\",  borderBottom:\"1px solid black\"}}>\n                {raceData.name}<Button color='red' style={{marginLeft:\"10px\"}} onClick={() => handleSelection(raceData.index)}>+select race</Button>\n                </h2>\n                <p style={{textAlign:\"left\", fontSize:\"20px\"}}>\n                Size: {raceData.size}\n                </p>\n                <p style={{textAlign:\"left\", fontSize:\"18px\"}}>                \n                    {raceData.alignment}                \n                </p>\n                <p style={{textAlign:\"left\", fontSize:\"18px\"}}>{raceData.size_description}</p>\n            \n            </Grid.Column>\n            </Grid.Row>  \n        \n            </Grid>\n            <Modal\n      onClose={() => setOpen(false)}\n      onOpen={() => setOpen(true)}\n      open={open}\n      \n    >\n        <HalflingModal />\n    </Modal>\n            </>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}