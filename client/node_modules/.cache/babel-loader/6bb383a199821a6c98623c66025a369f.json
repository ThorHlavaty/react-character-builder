{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/thorhlavaty/DigitalCrafts/react-character-builder/src/components/FinishingTouches/Attributes.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { Button, Grid, Header } from 'semantic-ui-react';\nimport { setStatCalc, setStatSubmitted } from '../../redux/actions';\nimport Attribute from './Attribute';\nexport default function Attributes() {\n  _s();\n\n  const [attributeArray] = useState(['Strength', 'Dexterity', 'Constitution', 'Wisdom', 'Intelligence', 'Charisma']);\n  const points = useSelector(state => state.pointCalculator);\n  const name = useSelector(state => state.name);\n  const submitted = useSelector(state => state.submitted);\n  const dispatch = useDispatch();\n  const history = useHistory();\n  let usedPoints = 0;\n  Object.keys(points).forEach(name => {\n    usedPoints += points[name][0];\n  });\n\n  function submitHandler() {\n    if (name === '') {\n      alert('You must choose a name!');\n    } else if (usedPoints !== 27) {\n      alert('You must spend all points!');\n    } else {\n      if (window.confirm(\"Are you sure you wish to confirm this Character?\")) {\n        dispatch(setStatSubmitted(true));\n      }\n    } // if(submitted === 'loaded'){\n    // attributeArray.forEach(element => {dispatch(setStatCalc(element, [0, 8]))})\n    // dispatch(setStatSubmitted(false))\n    // history.push('./')\n    // }\n\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      children: \"Your Character's Attrubutes:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"You have \", 27 - usedPoints, \" points left.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      columns: 3,\n      style: {\n        marginTop: \"10px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Grid.Row, {\n        children: attributeArray.map((attribute, index) => {\n          return /*#__PURE__*/_jsxDEV(Attribute, {\n            attribute: attribute\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 24\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: () => submitHandler(),\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Attributes, \"TKhsEZTDpsgSPgGOWj8UkI+uSKg=\", false, function () {\n  return [useSelector, useSelector, useSelector, useDispatch, useHistory];\n});\n\n_c = Attributes;\n\nvar _c;\n\n$RefreshReg$(_c, \"Attributes\");","map":{"version":3,"sources":["/Users/thorhlavaty/DigitalCrafts/react-character-builder/src/components/FinishingTouches/Attributes.js"],"names":["React","useEffect","useState","useDispatch","useSelector","useHistory","Button","Grid","Header","setStatCalc","setStatSubmitted","Attribute","Attributes","attributeArray","points","state","pointCalculator","name","submitted","dispatch","history","usedPoints","Object","keys","forEach","submitHandler","alert","window","confirm","marginTop","map","attribute","index"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,MAAvB,QAAqC,mBAArC;AACA,SAASC,WAAT,EAAsBC,gBAAtB,QAA8C,qBAA9C;AACA,OAAOC,SAAP,MAAsB,aAAtB;AAEA,eAAe,SAASC,UAAT,GAAsB;AAAA;;AACjC,QAAM,CAACC,cAAD,IAAmBX,QAAQ,CAAC,CAAC,UAAD,EAAa,WAAb,EAA0B,cAA1B,EAA0C,QAA1C,EAAoD,cAApD,EAAoE,UAApE,CAAD,CAAjC;AACA,QAAMY,MAAM,GAAGV,WAAW,CAACW,KAAK,IAAGA,KAAK,CAACC,eAAf,CAA1B;AACA,QAAMC,IAAI,GAAGb,WAAW,CAACW,KAAK,IAAGA,KAAK,CAACE,IAAf,CAAxB;AACA,QAAMC,SAAS,GAAGd,WAAW,CAACW,KAAK,IAAGA,KAAK,CAACG,SAAf,CAA7B;AACA,QAAMC,QAAQ,GAAGhB,WAAW,EAA5B;AACA,QAAMiB,OAAO,GAAGf,UAAU,EAA1B;AACA,MAAIgB,UAAU,GAAG,CAAjB;AAEAC,EAAAA,MAAM,CAACC,IAAP,CAAYT,MAAZ,EAAoBU,OAApB,CAA4BP,IAAI,IAAI;AAACI,IAAAA,UAAU,IAAIP,MAAM,CAACG,IAAD,CAAN,CAAa,CAAb,CAAd;AAA8B,GAAnE;;AAKA,WAASQ,aAAT,GAAwB;AACpB,QAAIR,IAAI,KAAK,EAAb,EAAiB;AACbS,MAAAA,KAAK,CAAC,yBAAD,CAAL;AACH,KAFD,MAEO,IAAIL,UAAU,KAAK,EAAnB,EAAsB;AACzBK,MAAAA,KAAK,CAAC,4BAAD,CAAL;AACH,KAFM,MAEA;AACH,UAAGC,MAAM,CAACC,OAAP,CAAe,kDAAf,CAAH,EAAsE;AAClET,QAAAA,QAAQ,CAACT,gBAAgB,CAAC,IAAD,CAAjB,CAAR;AACH;AACJ,KATmB,CAUpB;AACA;AACA;AACA;AACA;;AACP;;AAEG,sBACI;AAAA,4BACA,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,eAIA;AAAA,8BAAe,KAAKW,UAApB;AAAA;AAAA;AAAA;AAAA;AAAA,YAJA,eAKA,QAAC,IAAD;AAAM,MAAA,OAAO,EAAE,CAAf;AAAkB,MAAA,KAAK,EAAE;AAACQ,QAAAA,SAAS,EAAC;AAAX,OAAzB;AAAA,6BACI,QAAC,IAAD,CAAM,GAAN;AAAA,kBACChB,cAAc,CAACiB,GAAf,CAAmB,CAACC,SAAD,EAAYC,KAAZ,KAAsB;AACtC,8BAAO,QAAC,SAAD;AAAuB,YAAA,SAAS,EAAED;AAAlC,aAAgBC,KAAhB;AAAA;AAAA;AAAA;AAAA,kBAAP;AACH,SAFA;AADD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YALA,eAYA,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAE,MAAMP,aAAa,EAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAZA;AAAA,kBADJ;AAgBH;;GA/CuBb,U;UAELR,W,EACFA,W,EACKA,W,EACDD,W,EACDE,U;;;KANIO,U","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useHistory } from 'react-router-dom'\nimport { Button, Grid, Header } from 'semantic-ui-react'\nimport { setStatCalc, setStatSubmitted } from '../../redux/actions'\nimport Attribute from './Attribute'\n\nexport default function Attributes() {\n    const [attributeArray] = useState(['Strength', 'Dexterity', 'Constitution', 'Wisdom', 'Intelligence', 'Charisma'])\n    const points = useSelector(state=> state.pointCalculator)\n    const name = useSelector(state=> state.name)\n    const submitted = useSelector(state=> state.submitted)\n    const dispatch = useDispatch()\n    const history = useHistory()\n    let usedPoints = 0\n\n    Object.keys(points).forEach(name => {usedPoints += points[name][0]})\n\n    \n    \n    \n    function submitHandler(){\n        if (name === '') {\n            alert('You must choose a name!')\n        } else if (usedPoints !== 27){\n            alert('You must spend all points!')\n        } else {\n            if(window.confirm(\"Are you sure you wish to confirm this Character?\")){\n                dispatch(setStatSubmitted(true))\n            }\n        }\n        // if(submitted === 'loaded'){\n        // attributeArray.forEach(element => {dispatch(setStatCalc(element, [0, 8]))})\n        // dispatch(setStatSubmitted(false))\n        // history.push('./')\n        // }\n}\n\n    return (\n        <>\n        <Header>\n            Your Character's Attrubutes:\n        </Header>\n        <div>You have {27 - usedPoints} points left.</div>\n        <Grid columns={3} style={{marginTop:\"10px\"}}>\n            <Grid.Row>\n            {attributeArray.map((attribute, index) => {\n                return <Attribute key={index} attribute={attribute} />\n            })}\n            </Grid.Row>\n        </Grid>\n        <Button onClick={() => submitHandler()}>Submit</Button>\n        </>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}