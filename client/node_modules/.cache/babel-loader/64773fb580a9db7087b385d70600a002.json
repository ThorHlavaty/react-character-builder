{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/thorhlavaty/DigitalCrafts/react-character-builder/client/src/components/CharacterSheet/CharacterSheet.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Grid, Segment } from 'semantic-ui-react';\nimport CharacterStats from './CharacterStats';\nexport default function CharacterSheet() {\n  _s();\n\n  const [character, setCharacter] = useState({});\n  const [statArray, setStatArray] = useState([]);\n  const {\n    id\n  } = useParams();\n\n  function colorSelector() {\n    if (character.class === 'barbarian') {\n      return 'red';\n    } else if (character.class === 'bard') {\n      return 'pink';\n    } else if (character.class === 'cleric') {\n      return 'green';\n    } else if (character.class === 'druid') {\n      return 'olive';\n    } else if (character.class === 'fighter') {\n      return 'grey';\n    } else if (character.class === 'monk') {\n      return 'blue';\n    } else if (character.class === 'paladin') {\n      return 'yellow';\n    } else if (character.class === 'ranger') {\n      return 'brown';\n    } else if (character.class === 'rogue') {\n      return 'black';\n    } else if (character.class === 'sorcerer') {\n      return 'teal';\n    } else if (character.class === 'warlock') {\n      return 'orange';\n    } else if (character.class === 'wizard') {\n      return 'purple';\n    }\n  }\n\n  useEffect(() => {\n    fetch(`/api/v1/characters/${id}`).then(res => res.json()).then(data => {\n      setCharacter(data);\n      let newStatArray = [...statArray];\n      newStatArray.concat(data.str);\n      setStatArray([data.str, data.dex, data.con, data.wis, data.int, data.cha]); // setStatArray([...statArray].concat(data.str, character.dex, character.con, character.wis, character.int, character.cha))\n    });\n  }, [id]);\n  return /*#__PURE__*/_jsxDEV(Segment, {\n    inverted: true,\n    color: `${colorSelector()}`,\n    children: [character.name, \" \", character.class, \" \", character.race, /*#__PURE__*/_jsxDEV(Grid, {\n      columns: 8,\n      children: /*#__PURE__*/_jsxDEV(CharacterStats, {\n        stats: statArray\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CharacterSheet, \"JVlY7vY5A/VQ+RAgPWl2hoQQdXw=\", false, function () {\n  return [useParams];\n});\n\n_c = CharacterSheet;\n\nvar _c;\n\n$RefreshReg$(_c, \"CharacterSheet\");","map":{"version":3,"sources":["/Users/thorhlavaty/DigitalCrafts/react-character-builder/client/src/components/CharacterSheet/CharacterSheet.js"],"names":["React","useEffect","useState","useParams","Grid","Segment","CharacterStats","CharacterSheet","character","setCharacter","statArray","setStatArray","id","colorSelector","class","fetch","then","res","json","data","newStatArray","concat","str","dex","con","wis","int","cha","name","race"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { useParams } from 'react-router-dom';\nimport { Grid, Segment } from 'semantic-ui-react';\nimport CharacterStats from './CharacterStats';\n\nexport default function CharacterSheet() {\n  const [character, setCharacter ] = useState({});\n  const [statArray, setStatArray] = useState([])\n  const { id } = useParams();\n  \n  function colorSelector(){\n    if(character.class === 'barbarian') {\n      return 'red'\n    }\n    else if(character.class === 'bard') {\n      return 'pink'\n    }\n    else if(character.class === 'cleric') {\n      return 'green'\n    }\n    else if(character.class === 'druid') {\n      return 'olive'\n    }\n    else if(character.class === 'fighter') {\n      return 'grey'\n    }\n    else if(character.class === 'monk') {\n      return 'blue'\n    }\n    else if(character.class === 'paladin') {\n      return 'yellow'\n    }\n    else if(character.class === 'ranger') {\n      return 'brown'\n    }\n    else if(character.class === 'rogue') {\n      return 'black'\n    }\n    else if(character.class === 'sorcerer') {\n      return 'teal'\n    }\n    else if(character.class === 'warlock') {\n      return 'orange'\n    }\n    else if(character.class === 'wizard') {\n      return 'purple'\n    }\n  }\n\n  useEffect(() => {\n      fetch(`/api/v1/characters/${id}`)\n      .then(res => res.json())\n      .then(data => {\n          setCharacter(data);\n          let newStatArray = [...statArray]\n          newStatArray.concat(data.str)\n          setStatArray([data.str, data.dex, data.con, data.wis, data.int, data.cha])\n          // setStatArray([...statArray].concat(data.str, character.dex, character.con, character.wis, character.int, character.cha))\n      })    \n  }, [id])\n  \n  return (\n    <Segment inverted color={`${colorSelector()}`}>\n      {character.name} {character.class} {character.race}\n      <Grid columns={8}>\n        <CharacterStats stats={statArray} />\n      </Grid>\n    </Segment>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}