{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/thorhlavaty/DigitalCrafts/react-character-builder/src/components/races/RaceCard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Card, CardContent } from 'semantic-ui-react';\nimport { setRaces } from '../../redux/actions';\nexport default function RaceCard(props) {\n  _s();\n\n  const [raceData, setRaceData] = useState([]); // dispatch = useDispatch()\n\n  fetch(`https://www.dnd5eapi.co/api/races/${props.race}`).then(res => res.json()).then(data => {\n    setRaceData(data);\n  });\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: /*#__PURE__*/_jsxDEV(Card.Content, {\n      children: [/*#__PURE__*/_jsxDEV(Image, {\n        src: `../../../public/racesImages/${raceData.index}.jpg`,\n        wrapped: true,\n        ui: false\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Card.Header, {\n        children: raceData.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Card.Meta, {\n        children: [\"Size: \", raceData.size]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Card.Description, {\n        children: raceData.alignment\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 9\n  }, this);\n}\n\n_s(RaceCard, \"osF/wjFQqYpfR/ucwevgljx8Jic=\");\n\n_c = RaceCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"RaceCard\");","map":{"version":3,"sources":["/Users/thorhlavaty/DigitalCrafts/react-character-builder/src/components/races/RaceCard.js"],"names":["React","useState","useDispatch","Card","CardContent","setRaces","RaceCard","props","raceData","setRaceData","fetch","race","then","res","json","data","index","name","size","alignment"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,IAAT,EAAeC,WAAf,QAAkC,mBAAlC;AACA,SAASC,QAAT,QAAyB,qBAAzB;AAGA,eAAe,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAAA;;AACpC,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAAC,EAAD,CAAxC,CADoC,CAEpC;;AAEAS,EAAAA,KAAK,CAAE,qCAAoCH,KAAK,CAACI,IAAK,EAAjD,CAAL,CACCC,IADD,CACMC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADb,EAECF,IAFD,CAEMG,IAAI,IAAI;AACVN,IAAAA,WAAW,CAACM,IAAD,CAAX;AACH,GAJD;AAMA,sBACI,QAAC,IAAD;AAAA,2BACI,QAAC,IAAD,CAAM,OAAN;AAAA,8BACA,QAAC,KAAD;AAAO,QAAA,GAAG,EAAG,+BAA8BP,QAAQ,CAACQ,KAAM,MAA1D;AAAiE,QAAA,OAAO,MAAxE;AAAyE,QAAA,EAAE,EAAE;AAA7E;AAAA;AAAA;AAAA;AAAA,cADA,eAEI,QAAC,IAAD,CAAM,MAAN;AAAA,kBAAcR,QAAQ,CAACS;AAAvB;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI,QAAC,IAAD,CAAM,IAAN;AAAA,6BAAkBT,QAAQ,CAACU,IAA3B;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ,eAII,QAAC,IAAD,CAAM,WAAN;AAAA,kBACKV,QAAQ,CAACW;AADd;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAYH;;GAtBuBb,Q;;KAAAA,Q","sourcesContent":["import React, { useState } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { Card, CardContent } from 'semantic-ui-react'\nimport { setRaces } from '../../redux/actions'\n\n\nexport default function RaceCard(props) {\n    const [raceData, setRaceData] = useState([])\n    // dispatch = useDispatch()\n    \n    fetch(`https://www.dnd5eapi.co/api/races/${props.race}`)\n    .then(res => res.json())\n    .then(data => {\n        setRaceData(data)\n    })\n\n    return (\n        <Card>\n            <Card.Content>\n            <Image src={`../../../public/racesImages/${raceData.index}.jpg`} wrapped ui={false} />\n                <Card.Header>{raceData.name}</Card.Header>\n                <Card.Meta>Size: {raceData.size}</Card.Meta>\n                <Card.Description>\n                    {raceData.alignment}\n                </Card.Description> \n            </Card.Content>\n        </Card>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}