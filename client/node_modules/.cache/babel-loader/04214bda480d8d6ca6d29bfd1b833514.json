{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/thorhlavaty/DigitalCrafts/react-character-builder/client/src/components/classes/ClassCard.js\",\n    _s = $RefreshSig$();\n\n//This Component is each individual class. \nimport React, { useEffect, useState } from 'react';\nimport { Accordion, Button, Grid, Image } from 'semantic-ui-react';\nimport 'semantic-ui-css/semantic.min.css';\nimport { useDispatch } from 'react-redux';\nimport { setClass } from '../../redux/actions';\nimport { useHistory } from 'react-router-dom';\nexport default function ClassCard(props) {\n  _s();\n\n  const [classData, setClassData] = useState([]);\n  const [classProficiencies, setClassProficiencies] = useState([]);\n  const [classFeatures, setClassFeatures] = useState([]);\n  const [spellCasterData, setSpellCasterData] = useState([]);\n  const [spellCaster, setSpellcaster] = useState(false);\n  const [accordionIndex, setAccordionIndex] = useState(-1);\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  function handleAccordionClick(indexNum) {\n    const newIndex = accordionIndex === indexNum ? -1 : indexNum;\n    setAccordionIndex(newIndex);\n  }\n\n  function handleSelection(classSelection) {\n    dispatch(setClass(classSelection));\n    history.push('/stats');\n  }\n\n  useEffect(() => {\n    fetch(`https://www.dnd5eapi.co/api/classes/${props.classNames}`).then(res => res.json()).then(data => {\n      setClassData(data);\n      setClassProficiencies(data.proficiencies);\n\n      if (data.spellcasting !== undefined) {\n        setSpellcaster(true);\n        setSpellCasterData(data.spellcasting.info);\n      }\n    }); // The dnd API is a pretty spread out one, so we have to fetch twice in this component.\n\n    fetch(`https://www.dnd5eapi.co/api/classes/${props.classNames}/levels`).then(res => res.json()).then(data => {\n      setClassFeatures(data[0].features);\n    });\n  }, [props]);\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    celled: true,\n    children: /*#__PURE__*/_jsxDEV(Grid.Row, {\n      children: [/*#__PURE__*/_jsxDEV(Grid.Column, {\n        width: 4,\n        children: /*#__PURE__*/_jsxDEV(Image, {\n          src: `/classImages/${props.classNames}.jpg`,\n          alternate: \"\",\n          fluid: true,\n          ui: false\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid.Column, {\n        width: 12,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          style: {\n            textAlign: \"left\",\n            borderBottom: \"1px solid black\"\n          },\n          children: [classData.name, /*#__PURE__*/_jsxDEV(Button, {\n            color: \"red\",\n            style: {\n              marginLeft: \"10px\"\n            },\n            onClick: () => handleSelection(classData.index),\n            children: \"+select class\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 37\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            textAlign: \"left\",\n            fontSize: \"14px\"\n          },\n          children: [\"Proficencies: \", classProficiencies.map(proficiency => {\n            return proficiency.name + \" ♦ \";\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            textAlign: \"left\",\n            fontSize: \"14px\"\n          },\n          children: [\"Features: \", classFeatures.map(feature => {\n            return feature.name + \" ♦ \";\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 17\n        }, this), spellCaster && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"As a spellcaster:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 35\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              textAlign: \"left\"\n            },\n            children: [spellCasterData.map((description, index) => {\n              return /*#__PURE__*/_jsxDEV(Accordion, {\n                children: [/*#__PURE__*/_jsxDEV(Accordion.Title, {\n                  active: accordionIndex === index,\n                  index: index,\n                  onClick: () => handleAccordionClick(index),\n                  style: {\n                    color: 'indigo'\n                  },\n                  children: description.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 86,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Accordion.Content, {\n                  active: accordionIndex === index,\n                  children: /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: description.desc\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 95,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 94,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 28\n              }, this);\n            }), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 13\n  }, this);\n}\n\n_s(ClassCard, \"mqukD9btuZDwD6nWcDp/JZp1zLE=\", false, function () {\n  return [useDispatch, useHistory];\n});\n\n_c = ClassCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"ClassCard\");","map":{"version":3,"sources":["/Users/thorhlavaty/DigitalCrafts/react-character-builder/client/src/components/classes/ClassCard.js"],"names":["React","useEffect","useState","Accordion","Button","Grid","Image","useDispatch","setClass","useHistory","ClassCard","props","classData","setClassData","classProficiencies","setClassProficiencies","classFeatures","setClassFeatures","spellCasterData","setSpellCasterData","spellCaster","setSpellcaster","accordionIndex","setAccordionIndex","dispatch","history","handleAccordionClick","indexNum","newIndex","handleSelection","classSelection","push","fetch","classNames","then","res","json","data","proficiencies","spellcasting","undefined","info","features","textAlign","borderBottom","name","marginLeft","index","fontSize","map","proficiency","feature","description","color","desc"],"mappings":"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","sourcesContent":["//This Component is each individual class. \n\n\nimport React, { useEffect, useState } from 'react'\nimport { Accordion, Button, Grid,  Image } from 'semantic-ui-react'\nimport 'semantic-ui-css/semantic.min.css'\nimport { useDispatch } from 'react-redux'\nimport { setClass } from '../../redux/actions'\nimport { useHistory } from 'react-router-dom'\n\n\n\n\nexport default function ClassCard(props) {\n    \n    const [classData, setClassData] = useState([])\n    const [classProficiencies, setClassProficiencies] = useState([])\n    const [classFeatures, setClassFeatures] = useState([])\n    const [spellCasterData, setSpellCasterData] = useState([])\n    const [spellCaster, setSpellcaster] = useState(false)\n    const [accordionIndex, setAccordionIndex] = useState(-1)\n    const dispatch = useDispatch()\n    const history = useHistory()\n    \n    function handleAccordionClick(indexNum){\n      const newIndex = accordionIndex === indexNum ? -1 : indexNum\n      setAccordionIndex(newIndex)\n    }\n\n    function handleSelection(classSelection){\n      dispatch(setClass(classSelection))\n      history.push('/stats')\n  }\n\n\n    useEffect(() => {\n        fetch(`https://www.dnd5eapi.co/api/classes/${props.classNames}`)\n          .then(res => res.json())\n          .then(data => {\n            setClassData(data);\n            setClassProficiencies(data.proficiencies)\n            if(data.spellcasting !== undefined){\n              setSpellcaster(true)\n              setSpellCasterData(data.spellcasting.info)\n            }\n          })\n          // The dnd API is a pretty spread out one, so we have to fetch twice in this component.\n          fetch(`https://www.dnd5eapi.co/api/classes/${props.classNames}/levels`)\n          .then(res => res.json())\n          .then(data => {\n            setClassFeatures(data[0].features);\n          })\n      }, [props])\n      \n\n      \n\n    return (\n            \n            <Grid celled>\n\n        \n            <Grid.Row> \n                <Grid.Column width={4}>\n                    <Image src={`/classImages/${props.classNames}.jpg`} alternate='' fluid ui={false} />\n                </Grid.Column> \n            \n            <Grid.Column width={12}>\n            \n                <h2 style={{textAlign:\"left\",  borderBottom:\"1px solid black\"}}>\n                    {classData.name}<Button color='red' style={{marginLeft:\"10px\"}} onClick={() => handleSelection(classData.index)}>+select class</Button>\n                </h2>\n                <p style={{textAlign:\"left\", fontSize:\"14px\"}}>\n                Proficencies: {classProficiencies.map(proficiency => {\n                  return proficiency.name + \" ♦ \"})}\n                </p>\n                <p style={{textAlign:\"left\", fontSize:\"14px\"}}>\n                    Features: {classFeatures.map(feature => {\n                        return feature.name + \" ♦ \"\n                    })}\n                </p>\n                {/* This checks if the class can cast spells. If so, we render the details and make them clickable if you want to learn more. */}\n                {spellCaster && <><h2>As a spellcaster:</h2>\n                <p style={{textAlign:\"left\"}}>{spellCasterData.map((description, index) => {                        \n                    return <Accordion>\n                      <Accordion.Title\n                        active={accordionIndex === index}\n                        index={index}\n                        onClick={() =>handleAccordionClick(index)}\n                        style={{color: 'indigo'}}\n                                    >\n                        {description.name}   \n                      </Accordion.Title>\n                      <Accordion.Content active={accordionIndex === index}>\n                        <p>\n                          {description.desc}\n                        </p>\n                      </Accordion.Content>\n                    </Accordion>\n                    })} </p></>}\n                    \n            </Grid.Column>\n            </Grid.Row> \n            </Grid>\n        \n    )\n}"]},"metadata":{},"sourceType":"module"}