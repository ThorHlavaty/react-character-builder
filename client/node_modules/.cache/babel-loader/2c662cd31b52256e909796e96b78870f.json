{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/thorhlavaty/DigitalCrafts/react-character-builder/src/components/classes/ClassCard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react'; // import { useDispatch } from 'react-redux'\n\nimport { Button, Card, Grid, GridColumn, Image, Segment } from 'semantic-ui-react'; // import { setRaces } from '../../redux/actions'\n\nimport 'semantic-ui-css/semantic.min.css'; // import halfOrc from './racesImages/half-orc.jpg'\n\nimport dwarf from './classImages/dwarf.jpg';\nexport default function ClassCard(props) {\n  _s();\n\n  const [classData, setClassData] = useState([]);\n  const [classProficiencies, setClassProficiencies] = useState([]);\n  const [classFeatures, setClassFeatures] = useState([]);\n  const [loaded, setLoaded] = useState(false);\n  let proficienciesList = []; // dispatch = useDispatch()\n\n  useEffect(() => {\n    fetch(`https://www.dnd5eapi.co/api/classes/${props.classNames}`).then(res => res.json()).then(data => {\n      setClassData(data);\n      setClassProficiencies(data.proficiencies);\n    });\n    fetch(`https://www.dnd5eapi.co/api/classes/${props.classNames}/levels`).then(res => res.json()).then(data => {\n      setClassFeatures(data);\n      setLoaded(true);\n    });\n  }, [props]);\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    celled: true,\n    children: /*#__PURE__*/_jsxDEV(Grid.Row, {\n      children: [/*#__PURE__*/_jsxDEV(Grid.Column, {\n        width: 4,\n        children: /*#__PURE__*/_jsxDEV(Image, {\n          src: dwarf,\n          alternate: \"\",\n          fluid: true,\n          ui: false\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid.Column, {\n        width: 12,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          style: {\n            textAlign: \"left\",\n            borderBottom: \"1px solid black\"\n          },\n          children: [classData.name, /*#__PURE__*/_jsxDEV(Button, {\n            color: \"red\",\n            style: {\n              marginLeft: \"10px\"\n            },\n            children: \"+select class\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 37\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 17\n        }, this), loaded !== false && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              textAlign: \"left\",\n              fontSize: \"20px\"\n            },\n            children: [\"Proficencies: \", classProficiencies.map(proficiency => {\n              return proficiency.name;\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 40\n          }, this)\n        }, void 0, false)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 13\n  }, this);\n}\n\n_s(ClassCard, \"e9n/Ab5zJJPamMiGkCyYt2smDRg=\");\n\n_c = ClassCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"ClassCard\");","map":{"version":3,"sources":["/Users/thorhlavaty/DigitalCrafts/react-character-builder/src/components/classes/ClassCard.js"],"names":["React","useEffect","useState","Button","Card","Grid","GridColumn","Image","Segment","dwarf","ClassCard","props","classData","setClassData","classProficiencies","setClassProficiencies","classFeatures","setClassFeatures","loaded","setLoaded","proficienciesList","fetch","classNames","then","res","json","data","proficiencies","textAlign","borderBottom","name","marginLeft","fontSize","map","proficiency"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\n// import { useDispatch } from 'react-redux'\nimport { Button, Card, Grid, GridColumn, Image, Segment } from 'semantic-ui-react'\n// import { setRaces } from '../../redux/actions'\nimport 'semantic-ui-css/semantic.min.css'\n// import halfOrc from './racesImages/half-orc.jpg'\nimport dwarf from './classImages/dwarf.jpg'\n\n\n\nexport default function ClassCard(props) {\n    \n    const [classData, setClassData] = useState([])\n    const [classProficiencies, setClassProficiencies] = useState([])\n    const [classFeatures, setClassFeatures] = useState([])\n    const [loaded, setLoaded] = useState(false)\n    let proficienciesList = []\n    // dispatch = useDispatch()\n    useEffect(() => {\n        fetch(`https://www.dnd5eapi.co/api/classes/${props.classNames}`)\n          .then(res => res.json())\n          .then(data => {\n            setClassData(data);\n            setClassProficiencies(data.proficiencies)\n            \n          })\n          fetch(`https://www.dnd5eapi.co/api/classes/${props.classNames}/levels`)\n          .then(res => res.json())\n          .then(data => {\n            setClassFeatures(data);\n            setLoaded(true)\n          })\n      }, [props])\n      \n\n      \n\n    return (\n            \n            <Grid celled>\n\n        \n            <Grid.Row> \n                <Grid.Column width={4}>\n                    <Image src={dwarf} alternate='' fluid ui={false} />\n                </Grid.Column> \n            \n            <Grid.Column width={12}>\n            \n                <h2 style={{textAlign:\"left\",  borderBottom:\"1px solid black\"}}>\n                    {classData.name}<Button color='red' style={{marginLeft:\"10px\"}}>+select class</Button>\n                </h2>\n                {loaded !== false && <><p style={{textAlign:\"left\", fontSize:\"20px\"}}>\n                Proficencies: {classProficiencies.map(proficiency => {\n                   return proficiency.name})}\n                </p>\n                {/* <p style={{textAlign:\"left\", fontSize:\"18px\"}}>\n                    Features: {classFeatures.features.map(feature => {\n                        return feature.name\n                    })}\n                </p>\n                \n                    {classData.hasAttribute('spellcasting') && <p style={{textAlign:\"left\", fontSize:\"18px\"}}>{classData.spellcasting.info.map(description => {\n                        return description.name + \": \" + description.desc\n                    })} </p>} */}\n                    </>}\n            </Grid.Column>\n            </Grid.Row> \n            </Grid>\n        \n    )\n}"]},"metadata":{},"sourceType":"module"}