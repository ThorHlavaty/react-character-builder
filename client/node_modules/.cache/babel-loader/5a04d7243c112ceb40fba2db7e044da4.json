{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/thorhlavaty/DigitalCrafts/react-character-builder/src/components/races/RaceCard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react'; // import { useDispatch } from 'react-redux'\n\nimport { Card, Grid, GridColumn, Image, Segment } from 'semantic-ui-react'; // import { setRaces } from '../../redux/actions'\n\nimport 'semantic-ui-css/semantic.min.css';\nimport halfOrc from './racesImages/half-orc.jpg';\nimport dwarf from './racesImages/dwarf.jpg';\nexport default function RaceCard(props) {\n  _s();\n\n  const [raceData, setRaceData] = useState([]); // dispatch = useDispatch()\n\n  useEffect(() => {\n    fetch(`https://www.dnd5eapi.co/api/races/${props.race}`).then(res => res.json()).then(data => {\n      setRaceData(data);\n    });\n  }, [props]);\n  return /*#__PURE__*/_jsxDEV(Segment, {\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      columns: \"2\",\n      relaxed: \"very\",\n      children: [/*#__PURE__*/_jsxDEV(GridColumn, {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: /*#__PURE__*/_jsxDEV(Image, {\n            src: require(`./racesImages/${raceData.index}.jpg`).default,\n            alternate: \"\",\n            wrapped: true,\n            ui: false\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(GridColumn, {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          style: {\n            alignContent: \"flex-start\"\n          },\n          children: raceData.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Size: \", raceData.size]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: raceData.alignment\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n}\n\n_s(RaceCard, \"5PbMkg5nXxftppzdyGVFGPNnd8U=\");\n\n_c = RaceCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"RaceCard\");","map":{"version":3,"sources":["/Users/thorhlavaty/DigitalCrafts/react-character-builder/src/components/races/RaceCard.js"],"names":["React","useEffect","useState","Card","Grid","GridColumn","Image","Segment","halfOrc","dwarf","RaceCard","props","raceData","setRaceData","fetch","race","then","res","json","data","require","index","default","alignContent","name","size","alignment"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C,C,CACA;;AACA,SAASC,IAAT,EAAeC,IAAf,EAAqBC,UAArB,EAAiCC,KAAjC,EAAwCC,OAAxC,QAAuD,mBAAvD,C,CACA;;AACA,OAAO,kCAAP;AACA,OAAOC,OAAP,MAAoB,4BAApB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AAIA,eAAe,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAAA;;AACpC,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BX,QAAQ,CAAC,EAAD,CAAxC,CADoC,CAEpC;;AACAD,EAAAA,SAAS,CAAC,MAAM;AACZa,IAAAA,KAAK,CAAE,qCAAoCH,KAAK,CAACI,IAAK,EAAjD,CAAL,CACGC,IADH,CACQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADf,EAEGF,IAFH,CAEQG,IAAI,IAAI;AACZN,MAAAA,WAAW,CAACM,IAAD,CAAX;AACD,KAJH;AAKD,GANM,EAMJ,CAACR,KAAD,CANI,CAAT;AASA,sBACI,QAAC,OAAD;AAAA,2BACI,QAAC,IAAD;AAAM,MAAA,OAAO,EAAC,GAAd;AAAkB,MAAA,OAAO,EAAC,MAA1B;AAAA,8BAGA,QAAC,UAAD;AAAA,+BACI;AAAA,iCACJ,QAAC,KAAD;AAAO,YAAA,GAAG,EAAES,OAAO,CAAE,iBAAgBR,QAAQ,CAACS,KAAM,MAAjC,CAAP,CAA+CC,OAA3D;AAAoE,YAAA,SAAS,EAAC,EAA9E;AAAiF,YAAA,OAAO,MAAxF;AAAyF,YAAA,EAAE,EAAE;AAA7F;AAAA;AAAA;AAAA;AAAA;AADI;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAHA,eAQA,QAAC,UAAD;AAAA,gCAEI;AAAI,UAAA,KAAK,EAAE;AAACC,YAAAA,YAAY,EAAG;AAAhB,WAAX;AAAA,oBACCX,QAAQ,CAACY;AADV;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAKI;AAAA,+BACOZ,QAAQ,CAACa,IADhB;AAAA;AAAA;AAAA;AAAA;AAAA,gBALJ,eAQI;AAAA,oBAEKb,QAAQ,CAACc;AAFd;AAAA;AAAA;AAAA;AAAA,gBARJ;AAAA;AAAA;AAAA;AAAA;AAAA,cARA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AA6BH;;GAzCuBhB,Q;;KAAAA,Q","sourcesContent":["import React, { useEffect, useState } from 'react'\n// import { useDispatch } from 'react-redux'\nimport { Card, Grid, GridColumn, Image, Segment } from 'semantic-ui-react'\n// import { setRaces } from '../../redux/actions'\nimport 'semantic-ui-css/semantic.min.css'\nimport halfOrc from './racesImages/half-orc.jpg'\nimport dwarf from './racesImages/dwarf.jpg'\n\n\n\nexport default function RaceCard(props) {\n    const [raceData, setRaceData] = useState([])\n    // dispatch = useDispatch()\n    useEffect(() => {\n        fetch(`https://www.dnd5eapi.co/api/races/${props.race}`)\n          .then(res => res.json())\n          .then(data => {\n            setRaceData(data);\n          })\n      }, [props])\n    \n\n    return (\n        <Segment>\n            <Grid columns=\"2\" relaxed=\"very\">\n\n        \n            <GridColumn> \n                <p>\n            <Image src={require(`./racesImages/${raceData.index}.jpg`).default} alternate='' wrapped ui={false} />\n                </p>   \n            </GridColumn>\n            <GridColumn>\n            \n                <h2 style={{alignContent : \"flex-start\"}}>\n                {raceData.name}\n                </h2>\n                <p>\n                Size: {raceData.size}\n                </p>\n                <p>\n                \n                    {raceData.alignment}\n                \n                </p>\n            \n            </GridColumn>\n        \n            </Grid>\n        </Segment>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}