{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/thorhlavaty/DigitalCrafts/react-character-builder/client/src/components/CharacterSheet/CharacterStats.js\";\nimport React from 'react';\nimport { Grid, Segment } from 'semantic-ui-react';\nexport default function CharacterStats(props) {\n  function modCalc(stat) {\n    if (stat < 10) {\n      return \"-1\";\n    } else if (stat < 12) {\n      return '0';\n    } else {\n      return '+' + Math.floor((stat - 10) / 2);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Segment, {\n      children: [/*#__PURE__*/_jsxDEV(Grid.Column, {\n        width: 2,\n        children: /*#__PURE__*/_jsxDEV(Grid.Row, {\n          children: [/*#__PURE__*/_jsxDEV(Segment, {\n            children: [\"Strength: \", props.stats[0], /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 23,\n              columnNumber: 37\n            }, this), \"Str Mod: \", modCalc(props.stats[0])]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(Segment, {\n            children: [\"Dexterity: \", props.stats[1], /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 26,\n              columnNumber: 38\n            }, this), \"Dex Mod: \", modCalc(props.stats[1])]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(Segment, {\n            children: [\"Constitution: \", props.stats[2], /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 41\n            }, this), \"Con Mod: \", modCalc(props.stats[2])]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Grid.Column, {\n        children: /*#__PURE__*/_jsxDEV(Grid.Row, {\n          children: [/*#__PURE__*/_jsxDEV(Segment, {\n            children: [\"Wisdom: \", props.stats[3], /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 33\n            }, this), \"Wis Mod: \", modCalc(props.stats[3])]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Segment, {\n            children: [\"Intelligence: \", props.stats[4], /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 39\n            }, this), \"Int Mod: \", modCalc(props.stats[4])]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Segment, {\n            children: [\"Charisma: \", props.stats[5], /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 35\n            }, this), \"Cha Mod: \", modCalc(props.stats[5])]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n}\n_c = CharacterStats;\n\nvar _c;\n\n$RefreshReg$(_c, \"CharacterStats\");","map":{"version":3,"sources":["/Users/thorhlavaty/DigitalCrafts/react-character-builder/client/src/components/CharacterSheet/CharacterStats.js"],"names":["React","Grid","Segment","CharacterStats","props","modCalc","stat","Math","floor","stats"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,OAAf,QAA8B,mBAA9B;AAEA,eAAe,SAASC,cAAT,CAAwBC,KAAxB,EAA+B;AAC5C,WAASC,OAAT,CAAiBC,IAAjB,EAAsB;AACpB,QAAGA,IAAI,GAAG,EAAV,EAAa;AACX,aAAO,IAAP;AACD,KAFD,MAGK,IAAGA,IAAI,GAAG,EAAV,EAAa;AAChB,aAAO,GAAP;AACD,KAFI,MAGD;AACF,aAAO,MAAMC,IAAI,CAACC,KAAL,CAAW,CAACF,IAAI,GAAG,EAAR,IAAY,CAAvB,CAAb;AACD;AACF;;AAED,sBACE;AAAA,2BACA,QAAC,OAAD;AAAA,8BACA,QAAC,IAAD,CAAM,MAAN;AAAa,QAAA,KAAK,EAAE,CAApB;AAAA,+BACE,QAAC,IAAD,CAAM,GAAN;AAAA,kCACE,QAAC,OAAD;AAAA,qCACaF,KAAK,CAACK,KAAN,CAAY,CAAZ,CADb,eAC4B;AAAA;AAAA;AAAA;AAAA,oBAD5B,eAC2CJ,OAAO,CAACD,KAAK,CAACK,KAAN,CAAY,CAAZ,CAAD,CADlD;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAIE,QAAC,OAAD;AAAA,sCACcL,KAAK,CAACK,KAAN,CAAY,CAAZ,CADd,eAC6B;AAAA;AAAA;AAAA;AAAA,oBAD7B,eAC4CJ,OAAO,CAACD,KAAK,CAACK,KAAN,CAAY,CAAZ,CAAD,CADnD;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJF,eAOE,QAAC,OAAD;AAAA,yCACiBL,KAAK,CAACK,KAAN,CAAY,CAAZ,CADjB,eACgC;AAAA;AAAA;AAAA;AAAA,oBADhC,eAC+CJ,OAAO,CAACD,KAAK,CAACK,KAAN,CAAY,CAAZ,CAAD,CADtD;AAAA;AAAA;AAAA;AAAA;AAAA,kBAPF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADA,eAcA,QAAC,IAAD,CAAM,MAAN;AAAA,+BACA,QAAC,IAAD,CAAM,GAAN;AAAA,kCACE,QAAC,OAAD;AAAA,mCACWL,KAAK,CAACK,KAAN,CAAY,CAAZ,CADX,eAC0B;AAAA;AAAA;AAAA;AAAA,oBAD1B,eACyCJ,OAAO,CAACD,KAAK,CAACK,KAAN,CAAY,CAAZ,CAAD,CADhD;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAIE,QAAC,OAAD;AAAA,yCACiBL,KAAK,CAACK,KAAN,CAAY,CAAZ,CADjB,eACgC;AAAA;AAAA;AAAA;AAAA,oBADhC,eAC+CJ,OAAO,CAACD,KAAK,CAACK,KAAN,CAAY,CAAZ,CAAD,CADtD;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJF,eAOE,QAAC,OAAD;AAAA,qCACaL,KAAK,CAACK,KAAN,CAAY,CAAZ,CADb,eAC4B;AAAA;AAAA;AAAA;AAAA,oBAD5B,eAC2CJ,OAAO,CAACD,KAAK,CAACK,KAAN,CAAY,CAAZ,CAAD,CADlD;AAAA;AAAA;AAAA;AAAA;AAAA,kBAPF;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,cAdA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA,mBADF;AAgCD;KA7CuBN,c","sourcesContent":["import React from 'react'\nimport { Grid, Segment } from 'semantic-ui-react'\n\nexport default function CharacterStats(props) {\n  function modCalc(stat){\n    if(stat < 10){\n      return \"-1\"\n    }\n    else if(stat < 12){\n      return '0'\n    }\n    else{\n      return '+' + Math.floor((stat - 10)/2)\n    }\n  }\n  \n  return (\n    <>\n    <Segment>      \n    <Grid.Column width={2}>\n      <Grid.Row>\n        <Segment>\n          Strength: {props.stats[0]}<br/>Str Mod: {modCalc(props.stats[0])}\n        </Segment>\n        <Segment>\n          Dexterity: {props.stats[1]}<br/>Dex Mod: {modCalc(props.stats[1])}\n        </Segment>\n        <Segment>\n          Constitution: {props.stats[2]}<br/>Con Mod: {modCalc(props.stats[2])}\n        </Segment>\n      </Grid.Row>\n    </Grid.Column>      \n    <Grid.Column>\n    <Grid.Row>\n      <Segment>\n        Wisdom: {props.stats[3]}<br/>Wis Mod: {modCalc(props.stats[3])}\n      </Segment>\n      <Segment>\n        Intelligence: {props.stats[4]}<br/>Int Mod: {modCalc(props.stats[4])}\n      </Segment>\n      <Segment>\n        Charisma: {props.stats[5]}<br/>Cha Mod: {modCalc(props.stats[5])}\n      </Segment>\n    </Grid.Row>\n  </Grid.Column>\n  </Segment>\n  </>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}