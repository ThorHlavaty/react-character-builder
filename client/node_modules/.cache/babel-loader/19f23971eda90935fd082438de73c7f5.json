{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/thorhlavaty/DigitalCrafts/react-character-builder/src/components/races/RaceCard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react'; // import { useDispatch } from 'react-redux'\n\nimport { Card, Grid, GridColumn, Image, Segment } from 'semantic-ui-react'; // import { setRaces } from '../../redux/actions'\n\nimport 'semantic-ui-css/semantic.min.css';\nimport halfOrc from './racesImages/half-orc.jpg';\nimport dwarf from './racesImages/dwarf.jpg';\nexport default function RaceCard(props) {\n  _s();\n\n  const [raceData, setRaceData] = useState([]); // dispatch = useDispatch()\n\n  useEffect(() => {\n    fetch(`https://www.dnd5eapi.co/api/races/${props.race}`).then(res => res.json()).then(data => {\n      setRaceData(data);\n    });\n  }, [props]);\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    celled: true,\n    children: /*#__PURE__*/_jsxDEV(Grid.Row, {\n      children: [/*#__PURE__*/_jsxDEV(Grid.Column, {\n        width: 4,\n        children: /*#__PURE__*/_jsxDEV(Image, {\n          src: require(`./racesImages/${raceData.index}.jpg`).default,\n          alternate: \"\",\n          wrapped: true,\n          ui: false\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid.Column, {\n        width: 12,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          style: {\n            textAlign: \"left\"\n          },\n          children: raceData.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            textAlign: \"left\",\n            fontSize: \"20px\"\n          },\n          children: [\"Size: \", raceData.size]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            textAlign: \"left\",\n            fontSize: \"18px\",\n            borderBottom: \"5px solid black\"\n          },\n          children: raceData.alignment\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            textAlign: \"left\",\n            fontSize: \"18px\"\n          },\n          children: raceData.size_description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 13\n  }, this);\n}\n\n_s(RaceCard, \"5PbMkg5nXxftppzdyGVFGPNnd8U=\");\n\n_c = RaceCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"RaceCard\");","map":{"version":3,"sources":["/Users/thorhlavaty/DigitalCrafts/react-character-builder/src/components/races/RaceCard.js"],"names":["React","useEffect","useState","Card","Grid","GridColumn","Image","Segment","halfOrc","dwarf","RaceCard","props","raceData","setRaceData","fetch","race","then","res","json","data","require","index","default","textAlign","name","fontSize","size","borderBottom","alignment","size_description"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C,C,CACA;;AACA,SAASC,IAAT,EAAeC,IAAf,EAAqBC,UAArB,EAAiCC,KAAjC,EAAwCC,OAAxC,QAAuD,mBAAvD,C,CACA;;AACA,OAAO,kCAAP;AACA,OAAOC,OAAP,MAAoB,4BAApB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AAIA,eAAe,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAAA;;AACpC,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BX,QAAQ,CAAC,EAAD,CAAxC,CADoC,CAEpC;;AACAD,EAAAA,SAAS,CAAC,MAAM;AACZa,IAAAA,KAAK,CAAE,qCAAoCH,KAAK,CAACI,IAAK,EAAjD,CAAL,CACGC,IADH,CACQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADf,EAEGF,IAFH,CAEQG,IAAI,IAAI;AACZN,MAAAA,WAAW,CAACM,IAAD,CAAX;AACD,KAJH;AAKD,GANM,EAMJ,CAACR,KAAD,CANI,CAAT;AASA,sBAEQ,QAAC,IAAD;AAAM,IAAA,MAAM,MAAZ;AAAA,2BAGA,QAAC,IAAD,CAAM,GAAN;AAAA,8BACI,QAAC,IAAD,CAAM,MAAN;AAAa,QAAA,KAAK,EAAE,CAApB;AAAA,+BACJ,QAAC,KAAD;AAAO,UAAA,GAAG,EAAES,OAAO,CAAE,iBAAgBR,QAAQ,CAACS,KAAM,MAAjC,CAAP,CAA+CC,OAA3D;AAAoE,UAAA,SAAS,EAAC,EAA9E;AAAiF,UAAA,OAAO,MAAxF;AAAyF,UAAA,EAAE,EAAE;AAA7F;AAAA;AAAA;AAAA;AAAA;AADI;AAAA;AAAA;AAAA;AAAA,cADJ,eAKA,QAAC,IAAD,CAAM,MAAN;AAAa,QAAA,KAAK,EAAE,EAApB;AAAA,gCAEI;AAAI,UAAA,KAAK,EAAE;AAACC,YAAAA,SAAS,EAAC;AAAX,WAAX;AAAA,oBACCX,QAAQ,CAACY;AADV;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAKI;AAAG,UAAA,KAAK,EAAE;AAACD,YAAAA,SAAS,EAAC,MAAX;AAAmBE,YAAAA,QAAQ,EAAC;AAA5B,WAAV;AAAA,+BACOb,QAAQ,CAACc,IADhB;AAAA;AAAA;AAAA;AAAA;AAAA,gBALJ,eAQI;AAAG,UAAA,KAAK,EAAE;AAACH,YAAAA,SAAS,EAAC,MAAX;AAAmBE,YAAAA,QAAQ,EAAC,MAA5B;AAAoCE,YAAAA,YAAY,EAAC;AAAjD,WAAV;AAAA,oBAEKf,QAAQ,CAACgB;AAFd;AAAA;AAAA;AAAA;AAAA,gBARJ,eAaI;AAAG,UAAA,KAAK,EAAE;AAACL,YAAAA,SAAS,EAAC,MAAX;AAAmBE,YAAAA,QAAQ,EAAC;AAA5B,WAAV;AAAA,oBAAgDb,QAAQ,CAACiB;AAAzD;AAAA;AAAA;AAAA;AAAA,gBAbJ;AAAA;AAAA;AAAA;AAAA;AAAA,cALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHA;AAAA;AAAA;AAAA;AAAA,UAFR;AA+BH;;GA3CuBnB,Q;;KAAAA,Q","sourcesContent":["import React, { useEffect, useState } from 'react'\n// import { useDispatch } from 'react-redux'\nimport { Card, Grid, GridColumn, Image, Segment } from 'semantic-ui-react'\n// import { setRaces } from '../../redux/actions'\nimport 'semantic-ui-css/semantic.min.css'\nimport halfOrc from './racesImages/half-orc.jpg'\nimport dwarf from './racesImages/dwarf.jpg'\n\n\n\nexport default function RaceCard(props) {\n    const [raceData, setRaceData] = useState([])\n    // dispatch = useDispatch()\n    useEffect(() => {\n        fetch(`https://www.dnd5eapi.co/api/races/${props.race}`)\n          .then(res => res.json())\n          .then(data => {\n            setRaceData(data);\n          })\n      }, [props])\n    \n\n    return (\n        \n            <Grid celled>\n\n        \n            <Grid.Row> \n                <Grid.Column width={4}>\n            <Image src={require(`./racesImages/${raceData.index}.jpg`).default} alternate='' wrapped ui={false} />\n                </Grid.Column> \n            \n            <Grid.Column width={12}>\n            \n                <h2 style={{textAlign:\"left\"}}>\n                {raceData.name}\n                </h2>\n                <p style={{textAlign:\"left\", fontSize:\"20px\"}}>\n                Size: {raceData.size}\n                </p>\n                <p style={{textAlign:\"left\", fontSize:\"18px\", borderBottom:\"5px solid black\"}}>\n                \n                    {raceData.alignment}\n                \n                </p>\n                <p style={{textAlign:\"left\", fontSize:\"18px\"}}>{raceData.size_description}</p>\n            \n            </Grid.Column>\n            </Grid.Row>  \n        \n            </Grid>\n        \n    )\n}\n"]},"metadata":{},"sourceType":"module"}