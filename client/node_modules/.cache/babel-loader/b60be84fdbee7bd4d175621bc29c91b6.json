{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/thorhlavaty/DigitalCrafts/react-character-builder/src/components/FinishingTouches/Attribute.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { Grid } from 'semantic-ui-react';\nimport PointSpender from './PointSpender';\nexport default function Attribute(props) {\n  _s();\n\n  const [racialBonus, setRacialBonus] = useState(0);\n  const race = useSelector(state => state.race);\n  const halfElfBonusStats = useSelector(state => state.halfElfBonusStats);\n  useEffect(() => {\n    //Unfortunetly, the API doesn't have a great way of tracking race bonuses. It was either dig into the guts of the API, or just create the logic myself.\n    //I've played d&d, so inserting the logic was easy but tedious.\n    if (props.attribute === \"Strength\" && (race === 'human' || halfElfBonusStats.includes('str'))) {\n      setRacialBonus(1);\n    } else if (props.attribute === \"Dexterity\" && (race === 'human' || halfElfBonusStats.includes('dex'))) {\n      setRacialBonus(1);\n    } else if (props.attribute === \"Constitution\" && (race === 'human' || halfElfBonusStats.includes('con') || race === 'half-orc' || race === 'gnome')) {\n      setRacialBonus(1);\n    } else if (props.attribute === \"Wisdom\" && (race === 'human' || halfElfBonusStats.includes('wis') || race === 'dwarf' || race === 'halfling')) {\n      setRacialBonus(1);\n    } else if (props.attribute === \"Intelligence\" && (race === 'human' || halfElfBonusStats.includes('int') || race === 'elf' || race === 'tiefling')) {\n      setRacialBonus(1);\n    } else if (props.attribute === \"Charisma\" && (race === 'human' || race === 'dragonborn')) {\n      setRacialBonus(1);\n    } else if (props.attribute === \"Strength\" && (race === 'half-orc' || race === 'dragonborn')) {\n      setRacialBonus(2);\n    } else if (props.attribute === \"Dexterity\" && (race === 'elf' || race === 'halfling')) {\n      setRacialBonus(2);\n    } else if (props.attribute === \"Constitution\" && race === 'dwarf') {\n      setRacialBonus(2);\n    } else if (props.attribute === \"Intelligence\" && race === 'gnome') {\n      setRacialBonus(2);\n    } else if (props.attribute === \"Charisma\" && (race === 'tiefling' || race === 'half-elf')) {\n      setRacialBonus(2);\n    }\n  }, [race, props, halfElfBonusStats]);\n  return /*#__PURE__*/_jsxDEV(Grid.Column, {\n    style: {\n      marginTop: '8px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(PointSpender, {\n      racialBonus: racialBonus,\n      name: props.attribute\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 16\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Racial Bonus: \", racialBonus]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 13\n  }, this);\n}\n\n_s(Attribute, \"TousW5F3cC0XEgLtEe4AnD9s8QE=\", false, function () {\n  return [useSelector, useSelector];\n});\n\n_c = Attribute;\n\nvar _c;\n\n$RefreshReg$(_c, \"Attribute\");","map":{"version":3,"sources":["/Users/thorhlavaty/DigitalCrafts/react-character-builder/src/components/FinishingTouches/Attribute.js"],"names":["React","useEffect","useState","useSelector","Grid","PointSpender","Attribute","props","racialBonus","setRacialBonus","race","state","halfElfBonusStats","attribute","includes","marginTop"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { useSelector } from 'react-redux'\nimport { Grid } from 'semantic-ui-react'\nimport PointSpender from './PointSpender'\n\nexport default function Attribute(props) {\n    const [racialBonus, setRacialBonus] = useState(0)\n    const race = useSelector((state)=> state.race)\n    const halfElfBonusStats = useSelector((state)=>state.halfElfBonusStats)\n\n\n    useEffect(()=>{\n        //Unfortunetly, the API doesn't have a great way of tracking race bonuses. It was either dig into the guts of the API, or just create the logic myself.\n        //I've played d&d, so inserting the logic was easy but tedious.\n        if (props.attribute === \"Strength\" && (race === 'human' || halfElfBonusStats.includes('str'))){\n            setRacialBonus(1)\n        }\n        else if (props.attribute === \"Dexterity\" && (race === 'human' || halfElfBonusStats.includes('dex'))){\n            setRacialBonus(1)\n        }\n        else if (props.attribute === \"Constitution\" && (race === 'human' || halfElfBonusStats.includes('con') || race==='half-orc' || race==='gnome')){\n            setRacialBonus(1)\n        }\n        else if (props.attribute === \"Wisdom\" && (race === 'human' || halfElfBonusStats.includes('wis') || race ==='dwarf' || race === 'halfling')){\n            setRacialBonus(1)\n        }\n        else if (props.attribute === \"Intelligence\" && (race === 'human' || halfElfBonusStats.includes('int') || race ==='elf' || race === 'tiefling')){\n            setRacialBonus(1)\n        }\n        else if (props.attribute === \"Charisma\" && (race === 'human' || race === 'dragonborn')){\n            setRacialBonus(1)\n        }\n        else if (props.attribute === \"Strength\" && (race === 'half-orc' || race === 'dragonborn')){\n            setRacialBonus(2)\n        }\n        else if (props.attribute === \"Dexterity\" && (race === 'elf' || race === 'halfling')){\n            setRacialBonus(2)\n        }\n        else if (props.attribute === \"Constitution\" && race === 'dwarf'){\n            setRacialBonus(2)\n        }\n        else if (props.attribute === \"Intelligence\" && (race === 'gnome' )){\n            setRacialBonus(2)\n        }\n        else if (props.attribute === \"Charisma\" && (race === 'tiefling' || race === 'half-elf')){\n            setRacialBonus(2)\n        }\n        \n    }, [race, props, halfElfBonusStats])\n    \n    return (\n        \n            <Grid.Column style={{marginTop:'8px'}}>\n               <PointSpender racialBonus={racialBonus} name={props.attribute} />\n                <div>Racial Bonus: {racialBonus}</div>\n            </Grid.Column>\n\n        \n        \n    )\n}\n"]},"metadata":{},"sourceType":"module"}