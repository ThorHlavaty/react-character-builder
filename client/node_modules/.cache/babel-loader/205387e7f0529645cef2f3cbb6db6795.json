{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/thorhlavaty/DigitalCrafts/react-character-builder/client/src/components/CharacterSheet/ClassFeatures.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { Accordion } from 'semantic-ui-react';\nexport default function ClassFeatures(props) {\n  _s();\n\n  const [classFeatures, setClassFeatures] = useState([]);\n  const [spellCasterData, setSpellCasterData] = useState([]);\n  const [spellCaster, setSpellcaster] = useState(false);\n  const [accordionIndex, setAccordionIndex] = useState(-1);\n  const [classProficiencies, setClassProficiencies] = useState([]);\n  const className = useSelector(state => state.class);\n  const [loaded, setLoaded] = useState(false);\n  useEffect(() => {\n    fetch(`https://www.dnd5eapi.co/api/classes/${className}`).then(res => res.json()).then(data => {\n      setClassProficiencies(data.proficiencies);\n\n      if (data.spellcasting !== undefined) {\n        setSpellcaster(true);\n        setSpellCasterData(data.spellcasting.info);\n      }\n    }); // The dnd API is a pretty spread out one, so we have to fetch twice in this component.\n\n    fetch(`https://www.dnd5eapi.co/api/classes/${className}/levels`).then(res => res.json()).then(data => {\n      setClassFeatures(data[0].features);\n    });\n  }, [props]);\n\n  function handleAccordionClick(indexNum) {\n    const newIndex = accordionIndex === indexNum ? -1 : indexNum;\n    setAccordionIndex(newIndex);\n    setLoaded(true);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: loaded && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Proficencies: \", classProficiencies.map((proficiency, index) => {\n          return proficiency.name + \" ♦ \";\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Features: \", classFeatures.map(feature => {\n          return feature.name + \" ♦ \";\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 7\n      }, this), spellCaster && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"As a spellcaster:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            textAlign: \"left\"\n          },\n          children: [spellCasterData.map((description, index) => {\n            return /*#__PURE__*/_jsxDEV(Accordion, {\n              children: [/*#__PURE__*/_jsxDEV(Accordion.Title, {\n                active: accordionIndex === index,\n                index: index,\n                onClick: () => handleAccordionClick(index),\n                style: {\n                  color: 'indigo'\n                },\n                children: description.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 52,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(Accordion.Content, {\n                active: accordionIndex === index,\n                children: description.desc\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 20\n            }, this);\n          }), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 18\n    }, this)\n  }, void 0, false);\n}\n\n_s(ClassFeatures, \"n51/vdgm+3XB1+oFYzJHCB92FYI=\", false, function () {\n  return [useSelector];\n});\n\n_c = ClassFeatures;\n\nvar _c;\n\n$RefreshReg$(_c, \"ClassFeatures\");","map":{"version":3,"sources":["/Users/thorhlavaty/DigitalCrafts/react-character-builder/client/src/components/CharacterSheet/ClassFeatures.js"],"names":["React","useEffect","useState","useSelector","Accordion","ClassFeatures","props","classFeatures","setClassFeatures","spellCasterData","setSpellCasterData","spellCaster","setSpellcaster","accordionIndex","setAccordionIndex","classProficiencies","setClassProficiencies","className","state","class","loaded","setLoaded","fetch","then","res","json","data","proficiencies","spellcasting","undefined","info","features","handleAccordionClick","indexNum","newIndex","map","proficiency","index","name","feature","textAlign","description","color","desc"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { useSelector } from 'react-redux'\nimport { Accordion } from 'semantic-ui-react'\n\nexport default function ClassFeatures(props) {\n  const [classFeatures, setClassFeatures] = useState([])\n  const [spellCasterData, setSpellCasterData] = useState([])\n  const [spellCaster, setSpellcaster] = useState(false)\n  const [accordionIndex, setAccordionIndex] = useState(-1)\n  const [classProficiencies, setClassProficiencies] = useState([])\n  const className = useSelector(state=>state.class)\n  const [loaded, setLoaded] = useState(false)\n  \n  useEffect(() => {\n    fetch(`https://www.dnd5eapi.co/api/classes/${className}`)\n      .then(res => res.json())\n      .then(data => {\n        setClassProficiencies(data.proficiencies)\n        if(data.spellcasting !== undefined){\n          setSpellcaster(true)\n          setSpellCasterData(data.spellcasting.info)\n        }\n      })\n      // The dnd API is a pretty spread out one, so we have to fetch twice in this component.\n      fetch(`https://www.dnd5eapi.co/api/classes/${className}/levels`)\n      .then(res => res.json())\n      .then(data => {\n        setClassFeatures(data[0].features);\n      })\n  }, [props])\n\n  function handleAccordionClick(indexNum){\n    const newIndex = accordionIndex === indexNum ? -1 : indexNum\n    setAccordionIndex(newIndex)\n    setLoaded(true)\n  }\n\n  return (\n    <>{loaded && <div>\n      <p>\n        Proficencies: {classProficiencies.map((proficiency, index) => {\n          return proficiency.name + \" ♦ \" })}\n      </p>\n      <p>\n        Features: {classFeatures.map(feature => {\n          return feature.name + \" ♦ \"\n        })}\n      </p>\n      {spellCaster && <><h2>As a spellcaster:</h2>\n        <p style={{textAlign:\"left\"}}>{spellCasterData.map((description, index) => {                        \n            return <Accordion>\n              <Accordion.Title\n                active={accordionIndex === index}\n                index={index}\n                onClick={() =>handleAccordionClick(index)}\n                style={{color: 'indigo'}}\n                            >\n                {description.name}   \n              </Accordion.Title>\n              <Accordion.Content active={accordionIndex === index}>                        \n                  {description.desc}                        \n              </Accordion.Content>\n            </Accordion>\n            })} </p></>}\n          </div>}</>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}