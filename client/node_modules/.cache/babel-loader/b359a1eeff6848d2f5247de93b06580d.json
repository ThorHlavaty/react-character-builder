{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/thorhlavaty/DigitalCrafts/react-character-builder/client/src/components/CharacterSheet/ClassFeatures.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Accordion } from 'semantic-ui-react';\nexport default function ClassFeatures(props) {\n  _s();\n\n  const [classFeatures, setClassFeatures] = useState([]);\n  const [spellCasterData, setSpellCasterData] = useState([]);\n  const [spellCaster, setSpellcaster] = useState(false);\n  const [accordionIndex, setAccordionIndex] = useState(-1);\n  const [classProficiencies, setClassProficiencies] = useState([]);\n  useEffect(() => {\n    fetch(`https://www.dnd5eapi.co/api/classes/${props.className}`).then(res => res.json()).then(data => {\n      setClassProficiencies(data.proficiencies);\n\n      if (data.spellcasting !== undefined) {\n        setSpellcaster(true);\n        setSpellCasterData(data.spellcasting.info);\n      }\n    }); // The dnd API is a pretty spread out one, so we have to fetch twice in this component.\n\n    fetch(`https://www.dnd5eapi.co/api/classes/${props.className}/levels`).then(res => res.json()).then(data => {\n      setClassFeatures(data[0].features);\n    });\n  }, [props]);\n\n  function handleAccordionClick(indexNum) {\n    const newIndex = accordionIndex === indexNum ? -1 : indexNum;\n    setAccordionIndex(newIndex);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Proficencies: \", classProficiencies.map((proficiency, index) => {\n        return proficiency.name + \" ♦ \";\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Features: \", classFeatures.map(feature => {\n        return feature.name + \" ♦ \";\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), spellCaster && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"As a spellcaster:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          textAlign: \"left\"\n        },\n        children: [spellCasterData.map((description, index) => {\n          return /*#__PURE__*/_jsxDEV(Accordion, {\n            children: [/*#__PURE__*/_jsxDEV(Accordion.Title, {\n              active: accordionIndex === index,\n              index: index,\n              onClick: () => handleAccordionClick(index),\n              style: {\n                color: 'indigo'\n              },\n              children: description.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Accordion.Content, {\n              active: accordionIndex === index,\n              children: description.desc\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 20\n          }, this);\n        }), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ClassFeatures, \"cQ0CBVhU1V+7ABlUISkJ7CR4Vm8=\");\n\n_c = ClassFeatures;\n\nvar _c;\n\n$RefreshReg$(_c, \"ClassFeatures\");","map":{"version":3,"sources":["/Users/thorhlavaty/DigitalCrafts/react-character-builder/client/src/components/CharacterSheet/ClassFeatures.js"],"names":["React","useEffect","useState","Accordion","ClassFeatures","props","classFeatures","setClassFeatures","spellCasterData","setSpellCasterData","spellCaster","setSpellcaster","accordionIndex","setAccordionIndex","classProficiencies","setClassProficiencies","fetch","className","then","res","json","data","proficiencies","spellcasting","undefined","info","features","handleAccordionClick","indexNum","newIndex","map","proficiency","index","name","feature","textAlign","description","color","desc"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { Accordion } from 'semantic-ui-react'\n\nexport default function ClassFeatures(props) {\n  const [classFeatures, setClassFeatures] = useState([])\n  const [spellCasterData, setSpellCasterData] = useState([])\n  const [spellCaster, setSpellcaster] = useState(false)\n  const [accordionIndex, setAccordionIndex] = useState(-1)\n  const [classProficiencies, setClassProficiencies] = useState([])\n  \n  useEffect(() => {\n    fetch(`https://www.dnd5eapi.co/api/classes/${props.className}`)\n      .then(res => res.json())\n      .then(data => {\n        setClassProficiencies(data.proficiencies)\n        if(data.spellcasting !== undefined){\n          setSpellcaster(true)\n          setSpellCasterData(data.spellcasting.info)\n        }\n      })\n      // The dnd API is a pretty spread out one, so we have to fetch twice in this component.\n      fetch(`https://www.dnd5eapi.co/api/classes/${props.className}/levels`)\n      .then(res => res.json())\n      .then(data => {\n        setClassFeatures(data[0].features);\n      })\n  }, [props])\n\n  function handleAccordionClick(indexNum){\n    const newIndex = accordionIndex === indexNum ? -1 : indexNum\n    setAccordionIndex(newIndex)\n  }\n\n  return (\n    <div>\n      <p>\n        Proficencies: {classProficiencies.map((proficiency, index) => {\n          return proficiency.name + \" ♦ \" })}\n      </p>\n      <p>\n        Features: {classFeatures.map(feature => {\n          return feature.name + \" ♦ \"\n        })}\n      </p>\n      {spellCaster && <><h2>As a spellcaster:</h2>\n        <p style={{textAlign:\"left\"}}>{spellCasterData.map((description, index) => {                        \n            return <Accordion>\n              <Accordion.Title\n                active={accordionIndex === index}\n                index={index}\n                onClick={() =>handleAccordionClick(index)}\n                style={{color: 'indigo'}}\n                            >\n                {description.name}   \n              </Accordion.Title>\n              <Accordion.Content active={accordionIndex === index}>                        \n                  {description.desc}                        \n              </Accordion.Content>\n            </Accordion>\n            })} </p></>}\n  \n      \n    </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}