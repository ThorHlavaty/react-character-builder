{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/thorhlavaty/DigitalCrafts/react-character-builder/client/src/components/FinishingTouches/Attributes.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { Button, Grid, Header } from 'semantic-ui-react';\nimport Attribute from './Attribute';\nexport default function Attributes() {\n  _s();\n\n  const [attributeArray] = useState(['Strength', 'Dexterity', 'Constitution', 'Wisdom', 'Intelligence', 'Charisma']);\n  const points = useSelector(state => state.pointCalculator);\n  const name = useSelector(state => state.name);\n  const race = useSelector(state => state.race);\n  const classSelection = useSelector(state => state.classSelection);\n  const str = useSelector(state => state.pointCalculator['Strength'][state.pointCalculator['Strength'].length - 1]);\n  const dex = useSelector(state => state.pointCalculator['Dexterity'][state.pointCalculator['Dexterity'].length - 1]);\n  const con = useSelector(state => state.pointCalculator['Constitution'][state.pointCalculator['Constitution'].length - 1]);\n  const wis = useSelector(state => state.pointCalculator['Wisdom'][state.pointCalculator['Wisdom'].length - 1]);\n  const int = useSelector(state => state.pointCalculator['Intelligence'][state.pointCalculator['Intelligence'].length - 1]);\n  const cha = useSelector(state => state.pointCalculator['Charisma'][state.pointCalculator['Charisma'].length - 1]);\n  let usedPoints = 0; //All this does is allow us to access the names of the pointCalculator as an array, so we can easily loop over it.\n  //That makes it easy to check how many points the user has used.\n\n  Object.keys(points).forEach(name => {\n    usedPoints += points[name][0];\n  });\n\n  function submitHandler() {\n    if (name === '') {\n      alert('You must choose a name!');\n    } else if (usedPoints !== 27) {\n      alert('You must spend all points!');\n    } else {\n      if (window.confirm(\"Are you sure you wish to confirm this Character?\")) {\n        fetch('/api/v1/characters', {\n          method: 'POST',\n          body: JSON.stringify({\n            name: name,\n            race: race,\n            class: classSelection,\n            str: str,\n            dex: dex,\n            con: con,\n            wis: wis,\n            int: int,\n            cha: cha\n          }),\n          headers: {\n            'Content-Type': 'application/JSON'\n          }\n        }).then(res => res.json());\n      }\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      children: \"Your Character's Attrubutes:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"You have \", 27 - usedPoints, \" points left.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      columns: 3,\n      style: {\n        marginTop: \"10px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Grid.Row, {\n        children: attributeArray.map((attribute, index) => {\n          return /*#__PURE__*/_jsxDEV(Grid, {\n            columns: 2,\n            stackable: true,\n            children: /*#__PURE__*/_jsxDEV(Attribute, {\n              attribute: attribute\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 52\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 24\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: () => submitHandler(),\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Attributes, \"Uaryq0erp6iCl3LJi6i2t16Af/w=\", false, function () {\n  return [useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector];\n});\n\n_c = Attributes;\n\nvar _c;\n\n$RefreshReg$(_c, \"Attributes\");","map":{"version":3,"sources":["/Users/thorhlavaty/DigitalCrafts/react-character-builder/client/src/components/FinishingTouches/Attributes.js"],"names":["React","useState","useSelector","Button","Grid","Header","Attribute","Attributes","attributeArray","points","state","pointCalculator","name","race","classSelection","str","length","dex","con","wis","int","cha","usedPoints","Object","keys","forEach","submitHandler","alert","window","confirm","fetch","method","body","JSON","stringify","class","headers","then","res","json","marginTop","map","attribute","index"],"mappings":"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","sourcesContent":["import React, {  useState } from 'react'\nimport {  useSelector } from 'react-redux'\nimport { Button, Grid, Header } from 'semantic-ui-react'\nimport Attribute from './Attribute'\n\nexport default function Attributes() {\n    const [attributeArray] = useState(['Strength', 'Dexterity', 'Constitution', 'Wisdom', 'Intelligence', 'Charisma'])\n    const points = useSelector(state=> state.pointCalculator)\n    const name = useSelector(state=> state.name)\n    const race = useSelector(state=> state.race)\n    const classSelection = useSelector(state=> state.classSelection)\n    const str = useSelector(state=> state.pointCalculator['Strength'][state.pointCalculator['Strength'].length - 1])\n    const dex = useSelector(state=> state.pointCalculator['Dexterity'][state.pointCalculator['Dexterity'].length - 1])\n    const con = useSelector(state=> state.pointCalculator['Constitution'][state.pointCalculator['Constitution'].length - 1])\n    const wis = useSelector(state=> state.pointCalculator['Wisdom'][state.pointCalculator['Wisdom'].length - 1])\n    const int = useSelector(state=> state.pointCalculator['Intelligence'][state.pointCalculator['Intelligence'].length - 1])\n    const cha = useSelector(state=> state.pointCalculator['Charisma'][state.pointCalculator['Charisma'].length - 1])\n    let usedPoints = 0\n    //All this does is allow us to access the names of the pointCalculator as an array, so we can easily loop over it.\n    //That makes it easy to check how many points the user has used.\n    Object.keys(points).forEach(name => {usedPoints += points[name][0]})\n\n    \n    \n    \n    function submitHandler(){\n      if (name === '') {\n        alert('You must choose a name!')\n      } else if (usedPoints !== 27){\n        alert('You must spend all points!')\n      } else {\n        if(window.confirm(\"Are you sure you wish to confirm this Character?\")){\n          fetch('/api/v1/characters', {\n            method: 'POST',\n            body: JSON.stringify({\n                name: name,\n                race: race,\n                class: classSelection,\n                str: str,\n                dex: dex,\n                con: con,\n                wis: wis,\n                int: int,\n                cha: cha                \n            }),\n            headers: {\n                'Content-Type' : 'application/JSON'\n            }\n        })\n        .then(res =>res.json())\n          }\n        } \n      }\n\n    return (\n        <>\n        <Header>\n            Your Character's Attrubutes:\n        </Header>\n        <div>\n          You have {27 - usedPoints} points left.\n        </div>\n        <Grid columns={3} style={{marginTop:\"10px\"}}>\n          <Grid.Row>\n            {attributeArray.map((attribute, index) => {\n                return <Grid columns={2} stackable><Attribute key={index} attribute={attribute} /></Grid>\n            })}\n          </Grid.Row>\n        </Grid>\n        <Button onClick={() => submitHandler()}>\n          Submit\n        </Button>\n        </>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}