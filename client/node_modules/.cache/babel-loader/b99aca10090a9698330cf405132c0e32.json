{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/thorhlavaty/DigitalCrafts/react-character-builder/client/src/components/Characters/Character.js\";\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Button, Divider, Grid, Icon, Segment } from 'semantic-ui-react';\nexport default function Character(props) {\n  function colorSelector() {\n    if (props.character.class === 'barbarian') {\n      return 'red';\n    } else if (props.character.class === 'bard') {\n      return 'pink';\n    } else if (props.character.class === 'cleric') {\n      return 'green';\n    } else if (props.character.class === 'druid') {\n      return 'olive';\n    } else if (props.character.class === 'fighter') {\n      return 'grey';\n    } else if (props.character.class === 'monk') {\n      return 'blue';\n    } else if (props.character.class === 'paladin') {\n      return 'yellow';\n    } else if (props.character.class === 'ranger') {\n      return 'brown';\n    } else if (props.character.class === 'rogue') {\n      return 'black';\n    } else if (props.character.class === 'sorcerer') {\n      return 'teal';\n    } else if (props.character.class === 'warlock') {\n      return 'orange';\n    } else if (props.character.class === 'wizard') {\n      return 'purple';\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(Grid.Column, {\n    as: Link,\n    to: `/characters/${props.character.id}`,\n    children: /*#__PURE__*/_jsxDEV(Segment, {\n      inverted: true,\n      style: {\n        paddingLeft: '2px',\n        paddingTop: '1px',\n        paddingBottom: '2px',\n        paddingRight: '1px',\n        textShadow: '2px 2px black'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Segment, {\n        color: `${colorSelector()}`,\n        inverted: true,\n        style: {\n          marginBottom: \"0px\",\n          borderBottomLeftRadius: '0px',\n          borderBottomRightRadius: '0px',\n          padding: '10px',\n          borderBottom: '1px solid dimgray',\n          fontSize: \"20px\"\n        },\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          columns: 2,\n          children: [/*#__PURE__*/_jsxDEV(Divider, {\n            vertical: true,\n            hidden: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Grid.Row, {\n            children: [/*#__PURE__*/_jsxDEV(Grid.Column, {\n              textAlign: \"left\",\n              style: {\n                borderRight: '1px solid dimgray'\n              },\n              children: \"Character:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Grid.Column, {\n              textAlign: \"right\",\n              children: props.character.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Segment, {\n        color: `${colorSelector()}`,\n        inverted: true,\n        style: {\n          marginTop: \"0px\",\n          marginBottom: '0px',\n          borderRadius: '0px',\n          padding: '10px',\n          borderBottom: '1px solid dimgray',\n          fontSize: \"20px\"\n        },\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          columns: 2,\n          children: [/*#__PURE__*/_jsxDEV(Divider, {\n            vertical: true,\n            hidden: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Grid.Row, {\n            children: [/*#__PURE__*/_jsxDEV(Grid.Column, {\n              textAlign: \"left\",\n              style: {\n                borderRight: '1px solid dimgray'\n              },\n              children: \"Class:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Grid.Column, {\n              textAlign: \"right\",\n              children: [props.character.class.charAt(0).toUpperCase(), props.character.class.slice(1)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Segment, {\n        color: `${colorSelector()}`,\n        inverted: true,\n        style: {\n          marginTop: \"0px\",\n          marginBottom: '0px',\n          borderRadius: '0px',\n          padding: '10px',\n          borderBottom: '1px solid dimgray',\n          fontSize: \"20px\"\n        },\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          columns: 2,\n          children: [/*#__PURE__*/_jsxDEV(Divider, {\n            vertical: true,\n            hidden: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Grid.Row, {\n            children: [/*#__PURE__*/_jsxDEV(Grid.Column, {\n              textAlign: \"left\",\n              style: {\n                borderRight: '1px solid dimgray'\n              },\n              children: \"Race:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Grid.Column, {\n              textAlign: \"right\",\n              children: [props.character.race.charAt(0).toUpperCase(), props.character.race.slice(1)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Segment, {\n        color: `${colorSelector()}`,\n        inverted: true,\n        style: {\n          marginTop: \"0px\",\n          marginBottom: '0px',\n          borderRadius: '0px',\n          padding: '10px',\n          borderBottom: '1px solid dimgray',\n          fontSize: \"20px\"\n        },\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          columns: 2,\n          children: [/*#__PURE__*/_jsxDEV(Divider, {\n            vertical: true,\n            hidden: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Grid.Row, {\n            children: [/*#__PURE__*/_jsxDEV(Grid.Column, {\n              textAlign: \"left\",\n              style: {\n                borderRight: '1px solid dimgray'\n              },\n              children: \"Background:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Grid.Column, {\n              textAlign: \"right\",\n              children: [props.character.race.charAt(0).toUpperCase(), props.character.race.slice(1)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Segment, {\n        color: `${colorSelector()}`,\n        inverted: true,\n        style: {\n          marginTop: \"0px\",\n          borderTopLeftRadius: '0px',\n          borderTopRightRadius: '0px',\n          padding: '10px',\n          fontSize: \"20px\"\n        },\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          columns: 2,\n          as: \"Button\",\n          onClick: console.log('It works!'),\n          children: [/*#__PURE__*/_jsxDEV(Divider, {\n            vertical: true,\n            hidden: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Grid.Row, {\n            children: [/*#__PURE__*/_jsxDEV(Grid.Column, {\n              textAlign: \"left\",\n              style: {\n                borderRight: '1px solid dimgray'\n              },\n              children: \"Delete Character?\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Grid.Column, {\n              textAlign: \"right\",\n              children: /*#__PURE__*/_jsxDEV(Icon, {\n                name: \"user delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n_c = Character;\n\nvar _c;\n\n$RefreshReg$(_c, \"Character\");","map":{"version":3,"sources":["/Users/thorhlavaty/DigitalCrafts/react-character-builder/client/src/components/Characters/Character.js"],"names":["React","Link","Button","Divider","Grid","Icon","Segment","Character","props","colorSelector","character","class","id","paddingLeft","paddingTop","paddingBottom","paddingRight","textShadow","marginBottom","borderBottomLeftRadius","borderBottomRightRadius","padding","borderBottom","fontSize","borderRight","name","marginTop","borderRadius","charAt","toUpperCase","slice","race","borderTopLeftRadius","borderTopRightRadius","console","log"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { Button, Divider, Grid, Icon, Segment } from 'semantic-ui-react'\n\nexport default function Character(props) {\n  function colorSelector(){\n    if(props.character.class === 'barbarian') {\n      return 'red'\n    }\n    else if(props.character.class === 'bard') {\n      return 'pink'\n    }\n    else if(props.character.class === 'cleric') {\n      return 'green'\n    }\n    else if(props.character.class === 'druid') {\n      return 'olive'\n    }\n    else if(props.character.class === 'fighter') {\n      return 'grey'\n    }\n    else if(props.character.class === 'monk') {\n      return 'blue'\n    }\n    else if(props.character.class === 'paladin') {\n      return 'yellow'\n    }\n    else if(props.character.class === 'ranger') {\n      return 'brown'\n    }\n    else if(props.character.class === 'rogue') {\n      return 'black'\n    }\n    else if(props.character.class === 'sorcerer') {\n      return 'teal'\n    }\n    else if(props.character.class === 'warlock') {\n      return 'orange'\n    }\n    else if(props.character.class === 'wizard') {\n      return 'purple'\n    }\n  }\n  \n\n  \n\n  return (\n    <Grid.Column as={Link} to={`/characters/${props.character.id}`}>\n    <Segment inverted style={{paddingLeft:'2px', paddingTop:'1px', paddingBottom:'2px', paddingRight:'1px', textShadow:'2px 2px black'}}>\n      <Segment color={`${colorSelector()}`} inverted style={{marginBottom:\"0px\", borderBottomLeftRadius:'0px', borderBottomRightRadius:'0px', padding:'10px', borderBottom:'1px solid dimgray', fontSize:\"20px\"}}>\n        <Grid columns={2}>\n          <Divider vertical hidden />\n          <Grid.Row>\n            <Grid.Column textAlign=\"left\" style={{borderRight:'1px solid dimgray'}}>\n              Character: \n            </Grid.Column>\n            <Grid.Column textAlign='right'>\n              {props.character.name}\n            </Grid.Column>            \n          </Grid.Row>\n        </Grid>\n      </Segment>\n      <Segment color={`${colorSelector()}`} inverted style={{marginTop:\"0px\", marginBottom:'0px', borderRadius:'0px', padding:'10px', borderBottom:'1px solid dimgray', fontSize:\"20px\"}}>\n      <Grid columns={2}>\n          <Divider vertical hidden />\n          <Grid.Row>\n            <Grid.Column textAlign=\"left\"  style={{borderRight:'1px solid dimgray'}}>\n              Class: \n            </Grid.Column>\n            <Grid.Column textAlign='right'>\n              {props.character.class.charAt(0).toUpperCase()}{props.character.class.slice(1)}\n            </Grid.Column>            \n          </Grid.Row>\n        </Grid>\n      </Segment>\n      <Segment color={`${colorSelector()}`} inverted style={{marginTop:\"0px\", marginBottom:'0px', borderRadius:'0px', padding:'10px', borderBottom:'1px solid dimgray', fontSize:\"20px\"}}>\n      <Grid columns={2}>\n          <Divider vertical hidden/>\n          <Grid.Row>\n            <Grid.Column textAlign=\"left\" style={{borderRight:'1px solid dimgray'}}> \n              Race: \n            </Grid.Column>\n            <Grid.Column textAlign='right'>\n              {props.character.race.charAt(0).toUpperCase()}{props.character.race.slice(1)}\n            </Grid.Column>            \n          </Grid.Row>\n        </Grid>\n      </Segment>\n      <Segment color={`${colorSelector()}`} inverted style={{marginTop:\"0px\", marginBottom:'0px', borderRadius:'0px', padding:'10px', borderBottom:'1px solid dimgray', fontSize:\"20px\"}}>\n      <Grid columns={2}>\n          <Divider vertical hidden/>\n          <Grid.Row>\n            <Grid.Column textAlign=\"left\" style={{borderRight:'1px solid dimgray'}}> \n              Background: \n            </Grid.Column>\n            <Grid.Column textAlign='right'>\n              {props.character.race.charAt(0).toUpperCase()}{props.character.race.slice(1)}\n            </Grid.Column>            \n          </Grid.Row>\n        </Grid>\n      </Segment>\n      <Segment color={`${colorSelector()}`} inverted style={{marginTop:\"0px\", borderTopLeftRadius:'0px', borderTopRightRadius:'0px', padding:'10px', fontSize:\"20px\"}}>\n      <Grid columns={2} as='Button' onClick={console.log('It works!')}>\n          <Divider vertical hidden/>\n          <Grid.Row>\n            <Grid.Column textAlign=\"left\" style={{borderRight:'1px solid dimgray'}}> \n              Delete Character? \n            </Grid.Column>\n            <Grid.Column textAlign='right'>\n              <Icon name='user delete'></Icon>\n            </Grid.Column>            \n          </Grid.Row>\n        </Grid>\n      </Segment>\n    </Segment>\n</Grid.Column>\n  )\n}\n\n\n"]},"metadata":{},"sourceType":"module"}