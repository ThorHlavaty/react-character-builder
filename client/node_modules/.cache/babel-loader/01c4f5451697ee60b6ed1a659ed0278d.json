{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/thorhlavaty/DigitalCrafts/react-character-builder/client/src/components/CharacterSheet/CharacterSheet.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport { Grid, Segment } from 'semantic-ui-react';\nimport { setRace } from '../../redux/actions';\nimport CharacterStats from './CharacterStats';\nexport default function CharacterSheet() {\n  _s();\n\n  const [character, setCharacter] = useState({});\n  const [statArray, setStatArray] = useState([]);\n  const {\n    id\n  } = useParams();\n  const dispatch = useDispatch();\n  useEffect(() => {\n    fetch(`/api/v1/characters/${id}`).then(res => res.json()).then(data => {\n      setCharacter(data);\n      setStatArray([data.str, data.dex, data.con, data.wis, data.int, data.cha]);\n      dispatch(setRace(data.race));\n    });\n  }, [id]);\n  return /*#__PURE__*/_jsxDEV(Segment, {\n    style: {\n      height: '94vh',\n      width: '95vw'\n    },\n    children: [character.name, \" \", character.class, \" \", character.race, /*#__PURE__*/_jsxDEV(Grid, {\n      columns: 8,\n      children: /*#__PURE__*/_jsxDEV(CharacterStats, {\n        stats: statArray\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CharacterSheet, \"w4+9bJ44QtCJ3eCnKbME7KymdO4=\", false, function () {\n  return [useParams, useDispatch];\n});\n\n_c = CharacterSheet;\n\nvar _c;\n\n$RefreshReg$(_c, \"CharacterSheet\");","map":{"version":3,"sources":["/Users/thorhlavaty/DigitalCrafts/react-character-builder/client/src/components/CharacterSheet/CharacterSheet.js"],"names":["React","useEffect","useState","useDispatch","useParams","Grid","Segment","setRace","CharacterStats","CharacterSheet","character","setCharacter","statArray","setStatArray","id","dispatch","fetch","then","res","json","data","str","dex","con","wis","int","cha","race","height","width","name","class"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,SAASC,IAAT,EAAeC,OAAf,QAA8B,mBAA9B;AACA,SAASC,OAAT,QAAwB,qBAAxB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AAEA,eAAe,SAASC,cAAT,GAA0B;AAAA;;AACvC,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA6BT,QAAQ,CAAC,EAAD,CAA3C;AACA,QAAM,CAACU,SAAD,EAAYC,YAAZ,IAA4BX,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM;AAAEY,IAAAA;AAAF,MAASV,SAAS,EAAxB;AACA,QAAMW,QAAQ,GAAGZ,WAAW,EAA5B;AAGAF,EAAAA,SAAS,CAAC,MAAM;AACZe,IAAAA,KAAK,CAAE,sBAAqBF,EAAG,EAA1B,CAAL,CACCG,IADD,CACMC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADb,EAECF,IAFD,CAEMG,IAAI,IAAI;AACVT,MAAAA,YAAY,CAACS,IAAD,CAAZ;AACAP,MAAAA,YAAY,CAAC,CAACO,IAAI,CAACC,GAAN,EAAWD,IAAI,CAACE,GAAhB,EAAqBF,IAAI,CAACG,GAA1B,EAA+BH,IAAI,CAACI,GAApC,EAAyCJ,IAAI,CAACK,GAA9C,EAAmDL,IAAI,CAACM,GAAxD,CAAD,CAAZ;AACAX,MAAAA,QAAQ,CAACR,OAAO,CAACa,IAAI,CAACO,IAAN,CAAR,CAAR;AACH,KAND;AAOH,GARQ,EAQN,CAACb,EAAD,CARM,CAAT;AAUA,sBACE,QAAC,OAAD;AAAS,IAAA,KAAK,EAAE;AAACc,MAAAA,MAAM,EAAC,MAAR;AAAgBC,MAAAA,KAAK,EAAC;AAAtB,KAAhB;AAAA,eACGnB,SAAS,CAACoB,IADb,OACoBpB,SAAS,CAACqB,KAD9B,OACsCrB,SAAS,CAACiB,IADhD,eAEE,QAAC,IAAD;AAAM,MAAA,OAAO,EAAE,CAAf;AAAA,6BACE,QAAC,cAAD;AAAgB,QAAA,KAAK,EAAEf;AAAvB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAQD;;GAzBuBH,c;UAGPL,S,EACED,W;;;KAJKM,c","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { useDispatch } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport { Grid, Segment } from 'semantic-ui-react';\nimport { setRace } from '../../redux/actions';\nimport CharacterStats from './CharacterStats';\n\nexport default function CharacterSheet() {\n  const [character, setCharacter ] = useState({});\n  const [statArray, setStatArray] = useState([])\n  const { id } = useParams();\n  const dispatch = useDispatch()\n  \n\n  useEffect(() => {\n      fetch(`/api/v1/characters/${id}`)\n      .then(res => res.json())\n      .then(data => {\n          setCharacter(data);\n          setStatArray([data.str, data.dex, data.con, data.wis, data.int, data.cha])\n          dispatch(setRace(data.race))\n      })    \n  }, [id])\n  \n  return (\n    <Segment style={{height:'94vh', width:'95vw'}}>\n      {character.name} {character.class} {character.race}\n      <Grid columns={8}>\n        <CharacterStats stats={statArray} />\n      </Grid>\n    </Segment>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}