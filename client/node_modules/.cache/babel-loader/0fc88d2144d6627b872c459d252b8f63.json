{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/thorhlavaty/DigitalCrafts/react-character-builder/client/src/components/FinishingTouches/FinishingTouches.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Button, Form, Header, Segment } from 'semantic-ui-react';\nimport { setName, setStatCalc } from '../../redux/actions';\nimport Attributes from './Attributes';\nexport default function FinishingTouches() {\n  _s();\n\n  const [nameChange, setNameChange] = useState('');\n  const race = useSelector(state => state.race);\n  const classSelection = useSelector(state => state.classSelection);\n  const name = useSelector(state => state.name);\n  const dispatch = useDispatch();\n\n  function handleNameSelect(nameChange) {\n    dispatch(setName(nameChange));\n  } //This makes sure we have a clean stats array.\n\n\n  useEffect(() => {\n    dispatch(setStatCalc('Strength', [0, 8]));\n    dispatch(setStatCalc('Dexterity', [0, 8]));\n    dispatch(setStatCalc('Constitution', [0, 8]));\n    dispatch(setStatCalc('Wisdom', [0, 8]));\n    dispatch(setStatCalc('Intelligence', [0, 8]));\n    dispatch(setStatCalc('Charisma', [0, 8]));\n  }, [dispatch]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      as: \"h1\",\n      style: {\n        marginTop: \"5px\"\n      },\n      children: [\"I see, a\", race === 'elf' && 'n', \" \", race, \" \", classSelection, \"! \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 70\n      }, this), \" Now for the finishing touches...\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Segment, {\n      textAlign: \"left\",\n      inverted: true,\n      children: [/*#__PURE__*/_jsxDEV(Form, {\n        inverted: true,\n        children: [/*#__PURE__*/_jsxDEV(Form.Field, {\n          width: \"6\",\n          children: [name === '' && /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"What will this character's name be?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 17\n          }, this), name !== '' && /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"This character's name is \", name, \".\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            placeholder: \"Name\",\n            onChange: e => {\n              setNameChange(e.target.value);\n            },\n            style: {\n              width: '250px'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => handleNameSelect(nameChange),\n          children: \"Glory to their Name!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Attributes, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 7\n  }, this);\n}\n\n_s(FinishingTouches, \"EKuRrIdedaD6p2xN1B9b/7O6eD4=\", false, function () {\n  return [useSelector, useSelector, useSelector, useDispatch];\n});\n\n_c = FinishingTouches;\n\nvar _c;\n\n$RefreshReg$(_c, \"FinishingTouches\");","map":{"version":3,"sources":["/Users/thorhlavaty/DigitalCrafts/react-character-builder/client/src/components/FinishingTouches/FinishingTouches.js"],"names":["React","useEffect","useState","useDispatch","useSelector","Button","Form","Header","Segment","setName","setStatCalc","Attributes","FinishingTouches","nameChange","setNameChange","race","state","classSelection","name","dispatch","handleNameSelect","marginTop","e","target","value","width"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Button, Form, Header, Segment } from 'semantic-ui-react'\nimport { setName, setStatCalc } from '../../redux/actions'\nimport Attributes from './Attributes'\n\nexport default function FinishingTouches() {\n    const [nameChange, setNameChange] = useState('')\n    const race = useSelector((state)=> state.race)\n    const classSelection = useSelector((state)=> state.classSelection)\n    const name = useSelector((state) => state.name)\n    const dispatch = useDispatch()\n\n    function handleNameSelect(nameChange) {\n      dispatch(setName(nameChange))\n    }\n    //This makes sure we have a clean stats array.\n    useEffect(()=>{\n          dispatch(setStatCalc('Strength', [0,8]))\n          dispatch(setStatCalc('Dexterity', [0,8]))\n          dispatch(setStatCalc('Constitution', [0,8]))\n          dispatch(setStatCalc('Wisdom', [0,8]))\n          dispatch(setStatCalc('Intelligence', [0,8]))\n          dispatch(setStatCalc('Charisma', [0,8]))\n  }, [ dispatch ])\n\n    return (\n      <div>\n        <Header as=\"h1\" style={{marginTop:\"5px\"}}>\n            I see, a{race === 'elf' && 'n'} {race} {classSelection}! <br /> Now for the finishing touches...\n        </Header>\n        <Segment textAlign='left' inverted>\n            <Form inverted>\n              <Form.Field width=\"6\">\n                { name === '' &&\n                <h3>What will this character's name be?</h3>}\n                { name !== '' &&\n                <h3>This character's name is {name}.</h3>}\n                <input placeholder='Name' onChange={(e) => {setNameChange(e.target.value)}} style={{width:'250px'}}/>\n              </Form.Field>\n              <Button onClick={() => handleNameSelect(nameChange)}>Glory to their Name!</Button>\n            </Form>\n            <Attributes />\n        </Segment>\n      </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}