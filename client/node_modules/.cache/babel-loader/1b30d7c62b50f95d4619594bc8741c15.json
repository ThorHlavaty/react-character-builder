{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/thorhlavaty/DigitalCrafts/react-character-builder/src/components/races/RaceCard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react'; // import { useDispatch } from 'react-redux'\n\nimport { Button, Card, Grid, GridColumn, Image, Segment } from 'semantic-ui-react'; // import { setRaces } from '../../redux/actions'\n\nimport 'semantic-ui-css/semantic.min.css';\nimport { useHistory } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { setClass, setName, setRace } from '../../redux/actions';\nexport default function RaceCard(props) {\n  _s();\n\n  const [raceData, setRaceData] = useState([]);\n  const dispatch = useDispatch();\n  const history = useHistory();\n  useEffect(() => {\n    fetch(`https://www.dnd5eapi.co/api/races/${props.race}`).then(res => res.json()).then(data => {\n      dispatch(setRace(''));\n      dispatch(setClass(''));\n      dispatch(setName(''));\n      setRaceData(data);\n    });\n  }, [props]);\n\n  function handleSelection(race) {\n    dispatch(setRace(race));\n    history.push('/classes');\n  }\n\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    celled: true,\n    children: /*#__PURE__*/_jsxDEV(Grid.Row, {\n      children: [/*#__PURE__*/_jsxDEV(Grid.Column, {\n        width: 4,\n        children: /*#__PURE__*/_jsxDEV(Image, {\n          src: `/racesImages/${raceData.index}.jpg`,\n          alternate: \"\",\n          fluid: true,\n          ui: false\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid.Column, {\n        width: 12,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          style: {\n            textAlign: \"left\",\n            borderBottom: \"1px solid black\"\n          },\n          children: [raceData.name, /*#__PURE__*/_jsxDEV(Button, {\n            color: \"red\",\n            style: {\n              marginLeft: \"10px\"\n            },\n            onClick: () => handleSelection(raceData.index),\n            children: \"+select race\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 32\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            textAlign: \"left\",\n            fontSize: \"20px\"\n          },\n          children: [\"Size: \", raceData.size]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            textAlign: \"left\",\n            fontSize: \"18px\"\n          },\n          children: raceData.alignment\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            textAlign: \"left\",\n            fontSize: \"18px\"\n          },\n          children: raceData.size_description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 13\n  }, this);\n}\n\n_s(RaceCard, \"XIM+hrs0GeFELSylJfWFCr9it8I=\", false, function () {\n  return [useDispatch, useHistory];\n});\n\n_c = RaceCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"RaceCard\");","map":{"version":3,"sources":["/Users/thorhlavaty/DigitalCrafts/react-character-builder/src/components/races/RaceCard.js"],"names":["React","useEffect","useState","Button","Card","Grid","GridColumn","Image","Segment","useHistory","useDispatch","setClass","setName","setRace","RaceCard","props","raceData","setRaceData","dispatch","history","fetch","race","then","res","json","data","handleSelection","push","index","textAlign","borderBottom","name","marginLeft","fontSize","size","alignment","size_description"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\n// import { useDispatch } from 'react-redux'\nimport { Button, Card, Grid, GridColumn, Image, Segment } from 'semantic-ui-react'\n// import { setRaces } from '../../redux/actions'\nimport 'semantic-ui-css/semantic.min.css'\n\nimport {  useHistory } from 'react-router-dom'\nimport { useDispatch } from 'react-redux'\nimport { setClass, setName, setRace } from '../../redux/actions'\n\n\n\nexport default function RaceCard(props) {\n    const [raceData, setRaceData] = useState([])\n    const dispatch = useDispatch()\n    const history = useHistory()\n    \n    useEffect(() => {\n        fetch(`https://www.dnd5eapi.co/api/races/${props.race}`)\n          .then(res => res.json())\n          .then(data => {\n            dispatch(setRace(''))\n            dispatch(setClass(''))\n            dispatch(setName(''))\n            setRaceData(data);\n          })\n      }, [props])\n    \n    function handleSelection(race){\n        dispatch(setRace(race))\n        history.push('/classes')\n    }\n\n    return (\n        \n            <Grid celled>\n\n        \n            <Grid.Row> \n                <Grid.Column width={4}>\n            <Image src={`/racesImages/${raceData.index}.jpg`} alternate='' fluid ui={false} />\n                </Grid.Column> \n            \n            <Grid.Column width={12}>\n            \n                <h2 style={{textAlign:\"left\",  borderBottom:\"1px solid black\"}}>\n                {raceData.name}<Button color='red' style={{marginLeft:\"10px\"}} onClick={() => handleSelection(raceData.index)}>+select race</Button>\n                </h2>\n                <p style={{textAlign:\"left\", fontSize:\"20px\"}}>\n                Size: {raceData.size}\n                </p>\n                <p style={{textAlign:\"left\", fontSize:\"18px\"}}>                \n                    {raceData.alignment}                \n                </p>\n                <p style={{textAlign:\"left\", fontSize:\"18px\"}}>{raceData.size_description}</p>\n            \n            </Grid.Column>\n            </Grid.Row>  \n        \n            </Grid>\n        \n    )\n}\n"]},"metadata":{},"sourceType":"module"}