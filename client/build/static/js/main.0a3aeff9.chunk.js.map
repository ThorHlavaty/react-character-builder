{"version":3,"sources":["redux/actions.js","components/races/HalfElfModal.js","components/races/RaceCard.js","components/races/Races.js","components/classes/ClassCard.js","components/classes/Classes.js","components/DndHeader/DndHeader.js","components/HomePage/HomePage.js","components/FinishingTouches/PointSpender.js","components/FinishingTouches/Attribute.js","components/FinishingTouches/Attributes.js","components/FinishingTouches/Name.js","components/FinishingTouches/FinishingTouches.js","components/Characters/Character.js","components/Characters/Characters.js","components/CharacterSheet/ClassFeatures.js","components/CharacterSheet/Equipment.js","components/CharacterSheet/RacialTraits.js","components/CharacterSheet/CharacterStats.js","components/CharacterSheet/CharacterSheet.js","App.js","reportWebVitals.js","redux/reducers.js","redux/store.js","index.js"],"names":["SET_RACE","SET_CLASS","SET_NAME","SET_HALFELFBONUSSTATS","RESET_HALFELFBONUSSTATS","SET_STR","SET_DEX","SET_CON","SET_WIS","SET_INT","SET_CHA","SET_STATCALC","SET_CHARSUBMITTED","SET_BACKGROUND","setRace","race","type","payload","setBackground","background","setClass","classSelection","setName","name","setHalfElfBonusStats","halfElfBonusStats","resetHalfElfBonusStats","setStatCalc","statName","pointValue","setCharSubmitted","charSubmitted","setDex","dex","setCon","con","setWis","wis","setInt","int","setCha","cha","HalfElfModal","dispatch","useDispatch","history","useHistory","useState","numberSelected","setNumberSelected","str","setStr","useEffect","Form","Group","grouped","Field","label","control","onClick","e","target","checked","Button","color","push","alert","RaceCard","props","raceData","setRaceData","open","setOpen","fetch","then","res","json","data","Grid","celled","Row","Column","width","Image","src","index","alternate","fluid","ui","style","textAlign","borderBottom","marginLeft","fontSize","size","alignment","size_description","Modal","onClose","onOpen","Races","races","setRaces","results","Header","as","marginTop","map","ClassCard","classData","setClassData","classProficiencies","setClassProficiencies","classFeatures","setClassFeatures","spellCasterData","setSpellCasterData","spellCaster","setSpellcaster","accordionIndex","setAccordionIndex","classNames","proficiencies","undefined","spellcasting","info","features","proficiency","feature","description","Accordion","Title","active","indexNum","Content","desc","Classes","setClassNames","useSelector","state","DndHeader","Menu","inverted","marginBottom","borderRadius","Item","Link","to","HomePage","Segment","height","href","rel","border","PointSpender","points","pointCalculator","usedPoints","Object","keys","forEach","onChange","value","split","x","parseInt","concat","racialBonus","defaultValue","disabled","Attribute","setRacialBonus","attribute","includes","Attributes","attributeArray","length","columns","doubling","window","confirm","method","body","JSON","stringify","class","headers","Name","nameChange","setNameChange","placeholder","handleNameSelect","FinishingTouches","Character","colorSelector","character","paddingLeft","paddingTop","paddingBottom","paddingRight","textShadow","borderBottomLeftRadius","borderBottomRightRadius","padding","id","Divider","vertical","hidden","borderRight","charAt","toUpperCase","slice","borderTopLeftRadius","borderTopRightRadius","icon","Icon","Characters","characters","setCharacters","textDecoration","stackable","margin","ClassFeatures","loaded","setLoaded","Equipment","equipment","setEquipment","startingEquipment","setStartingEquipment","starting_equipment","starting_equipment_options","filter","option","from","Container","item","RacialTraits","traits","setTraits","setProficencies","starting_proficiencies","trait","CharacterStats","className","circle","modCalc","stat","Math","floor","stats","only","CharacterSheet","setCharacter","statArray","setStatArray","useParams","App","path","exact","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","require","rootReducer","combineReducers","action","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0a3aeff9.chunk.js","sourcesContent":["export const SET_RACE = 'SET_RACE'\nexport const SET_CLASS = 'SET_CLASS'\nexport const SET_NAME = 'SET_NAME'\nexport const SET_HALFELFBONUSSTATS = 'SET_HALFELFBONUSSTATS'\nexport const RESET_HALFELFBONUSSTATS = 'RESET_HALFELFBONUSSTATS'\nexport const SET_STR = 'SET_STR' \nexport const SET_DEX = 'SET_DEX' \nexport const SET_CON = 'SET_CON' \nexport const SET_WIS = 'SET_WIS' \nexport const SET_INT = 'SET_INT' \nexport const SET_CHA = 'SET_CHA' \nexport const SET_STATCALC = 'SET_STATCALC'\nexport const SET_CHARSUBMITTED = 'SET_CHARSUBMITTED'\nexport const SET_BACKGROUND = 'SET_BACKGROUND'\n\n\n\n\nexport function setRace(race) {\n    return {\n        type: SET_RACE,\n        payload: {\n            race\n        }\n    }\n}\n\nexport function setBackground(background) {\n    return {\n        type: SET_BACKGROUND,\n        payload: {\n            background\n        }\n    }\n}\n\nexport function setClass(classSelection='') {\n    return {\n        type: SET_CLASS,\n        payload: {\n            classSelection \n        }\n    }\n}\n\nexport function setName(name) {\n    return {\n        type: SET_NAME,\n        payload: {\n            name\n        }\n    }\n}\n\nexport function setHalfElfBonusStats(halfElfBonusStats) {\n    return {\n        type: SET_HALFELFBONUSSTATS,\n        payload: {\n            halfElfBonusStats\n        }\n    }\n}\n\nexport function resetHalfElfBonusStats(halfElfBonusStats) {\n    return {\n        type: RESET_HALFELFBONUSSTATS,\n        payload: {\n            halfElfBonusStats\n        }\n    }\n}\n\nexport function setStatCalc(statName, pointValue){\n    return {\n        type: SET_STATCALC,\n        payload: {\n            statName,\n            pointValue\n        }\n    }\n}\n\nexport function setCharSubmitted(charSubmitted){\n    return {\n        type: SET_CHARSUBMITTED,\n        payload: {\n            charSubmitted\n        }\n    }\n}\n\nexport function setDex(dex) {\n    return {    \n        type: SET_DEX,\n        payload: {\n            dex\n        }\n    }\n}\nexport function setCon(con) {\n    return {\n        type: SET_CON,\n        payload: {\n            con\n        }\n    }\n}\nexport function setWis(wis) {\n    return {\n        type: SET_WIS,\n        payload: {\n            wis\n        }\n    }\n}\nexport function setInt(int) {\n    return {\n        type: SET_INT,\n        payload: {\n            int\n        }\n    }\n}\nexport function setCha(cha) {\n    return {\n        type: SET_CHA,\n        payload: {\n            cha\n        }\n    }\n}","//This was fun. The problem with half-elves is that they get to choose to put\n//their bonus attributes. This meant I had to come up with special logic for them.\n\nimport React, { useEffect, useState } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { useHistory } from 'react-router-dom'\nimport { Button, Form } from 'semantic-ui-react'\nimport { setHalfElfBonusStats } from '../../redux/actions'\n\nexport default function HalfElfModal() {\n    const dispatch = useDispatch()\n    const history = useHistory()\n    const [numberSelected, setNumberSelected] = useState(0)\n    const [str, setStr] = useState(false)\n    const [dex, setDex] = useState(false)\n    const [con, setCon] = useState(false)\n    const [wis, setWis] = useState(false)\n    const [int, setInt] = useState(false)\n    \n    useEffect(()=>{\n        dispatch(setHalfElfBonusStats())\n    }, [dispatch])\n\n    function handleClick() {\n        if(numberSelected !== 2){\n            alert(\"You must select exactly 2 stats!\")\n            return\n        }\n        if (str){\n            dispatch(setHalfElfBonusStats('str'))\n        }\n        if (dex){\n            dispatch(setHalfElfBonusStats('dex'))\n        }\n        if (con){\n            dispatch(setHalfElfBonusStats('con'))\n        }\n        if (wis){\n            dispatch(setHalfElfBonusStats('wis'))\n        }\n        if (int){\n            dispatch(setHalfElfBonusStats('int'))\n        }\n        history.push('/classes')\n    }\n\n    return (<Form>\n        <Form.Group grouped>\n      <label>Choose 2 bonus attributes:</label>\n      <Form.Field label='Strength'  control='input' type='checkbox' onClick={(e)=>  {setStr(e.target.checked); setNumberSelected(e.target.checked ? numberSelected + 1 : numberSelected - 1)}}/>\n      <Form.Field label='Dexterity' control='input' type='checkbox' onClick={(e)=>  {setDex(e.target.checked); setNumberSelected(e.target.checked ? numberSelected + 1 : numberSelected - 1)}}/>\n      <Form.Field label='Constitution' control='input' type='checkbox' onClick={(e)=>  {setCon(e.target.checked); setNumberSelected(e.target.checked ? numberSelected + 1 : numberSelected - 1)}}/>\n      <Form.Field label='Wisdom' control='input' type='checkbox' onClick={(e)=>  {setWis(e.target.checked); setNumberSelected(e.target.checked ? numberSelected + 1 : numberSelected - 1)}}/>\n      <Form.Field label='Intelligence' control='input' type='checkbox' onClick={(e)=>  {setInt(e.target.checked); setNumberSelected(e.target.checked ? numberSelected + 1 : numberSelected - 1)}}/>\n      <Button type='submit' color='red' onClick={()=> handleClick()}>Submit</Button>\n        </Form.Group>\n        </Form>\n    )\n}\n","import React, { useEffect, useState } from 'react'\nimport { Button, Grid, Image, Modal } from 'semantic-ui-react'\nimport 'semantic-ui-css/semantic.min.css'\n\nimport {  useHistory } from 'react-router-dom'\nimport { useDispatch } from 'react-redux'\nimport { resetHalfElfBonusStats, setClass, setName, setRace } from '../../redux/actions'\nimport HalfElfModal from './HalfElfModal'\n\n\n\nexport default function RaceCard(props) {\n    const [raceData, setRaceData] = useState([])\n    const [open, setOpen] = useState(false)\n    const dispatch = useDispatch()\n    const history = useHistory()\n    \n    useEffect(() => {\n        fetch(`https://www.dnd5eapi.co/api/races/${props.race}`)\n        .then(res => res.json())\n        .then(data => {\n            dispatch(setRace(''))\n            dispatch(setClass(''))\n            dispatch(setName(''))\n            dispatch(resetHalfElfBonusStats())\n            setRaceData(data);\n        })\n    }, [props, dispatch])\n    \n    function handleSelection(race){\n        (race === 'half-elf' ? setOpen(true) : history.push('/classes'))\n        dispatch(setRace(race))\n        \n    } \n\n    return (\n            <>\n            <Grid celled>\n\n        \n            <Grid.Row> \n                <Grid.Column width={4}>\n            <Image src={`../racesImages/${raceData.index}.jpg`} alternate='' fluid ui={false} />\n                </Grid.Column> \n            \n            <Grid.Column width={12}>\n            \n                <h2 style={{textAlign:\"left\",  borderBottom:\"1px solid black\"}}>\n                {raceData.name}<Button color='red' style={{marginLeft:\"10px\"}} onClick={() => handleSelection(raceData.index)}>+select race</Button>\n                </h2>\n                <p style={{textAlign:\"left\", fontSize:\"20px\"}}>\n                Size: {raceData.size}\n                </p>\n                <p style={{textAlign:\"left\", fontSize:\"18px\"}}>                \n                    {raceData.alignment}                \n                </p>\n                <p style={{textAlign:\"left\", fontSize:\"18px\"}}>{raceData.size_description}</p>\n            \n            </Grid.Column>\n            </Grid.Row>  \n        \n            </Grid>\n            <Modal\n                onClose={() => setOpen(false)}\n                onOpen={() => setOpen(true)}\n                open={open}\n                    >\n                <HalfElfModal />\n            </Modal>\n            </>\n    )\n}\n","import React, { useEffect, useState } from 'react'\nimport { Header } from 'semantic-ui-react'\nimport RaceCard from './RaceCard'\n\nexport default function Races() {\n    const [races, setRaces] = useState([])\n    // dispatch = useDispatch()\n    \n    useEffect(() => {\n        fetch(`https://www.dnd5eapi.co/api/races`)\n          .then(res => res.json())\n          .then(data => {\n            setRaces(data.results);\n          })\n      }, [])\n    \n    return (\n        <div>\n        <Header as=\"h1\" style={{marginTop:\"5px\"}}>\n            First, choose your race.\n        </Header>\n            {races.map((race, index) => {\n                return <RaceCard race={race.index} key={index} />\n            })}\n        </div>\n    )\n}\n","//This Component is each individual class. \n\n\nimport React, { useEffect, useState } from 'react'\nimport { Accordion, Button, Grid,  Image } from 'semantic-ui-react'\nimport 'semantic-ui-css/semantic.min.css'\nimport { useDispatch } from 'react-redux'\nimport { setClass } from '../../redux/actions'\nimport { useHistory } from 'react-router-dom'\n\n\n\n\nexport default function ClassCard(props) {\n    \n    const [classData, setClassData] = useState([])\n    const [classProficiencies, setClassProficiencies] = useState([])\n    const [classFeatures, setClassFeatures] = useState([])\n    const [spellCasterData, setSpellCasterData] = useState([])\n    const [spellCaster, setSpellcaster] = useState(false)\n    const [accordionIndex, setAccordionIndex] = useState(-1)\n    const dispatch = useDispatch()\n    const history = useHistory()\n    \n    function handleAccordionClick(indexNum){\n      const newIndex = accordionIndex === indexNum ? -1 : indexNum\n      setAccordionIndex(newIndex)\n    }\n\n    function handleSelection(classSelection){\n      dispatch(setClass(classSelection))\n      history.push('/stats')\n  }\n\n\n    useEffect(() => {\n        fetch(`https://www.dnd5eapi.co/api/classes/${props.classNames}`)\n          .then(res => res.json())\n          .then(data => {\n            setClassData(data);\n            setClassProficiencies(data.proficiencies)\n            if(data.spellcasting !== undefined){\n              setSpellcaster(true)\n              setSpellCasterData(data.spellcasting.info)\n            }\n          })\n          // The dnd API is a pretty spread out one, so we have to fetch twice in this component.\n          fetch(`https://www.dnd5eapi.co/api/classes/${props.classNames}/levels`)\n          .then(res => res.json())\n          .then(data => {\n            setClassFeatures(data[0].features);\n          })\n      }, [props])\n      \n\n      \n\n    return (\n            \n            <Grid celled>\n\n        \n            <Grid.Row> \n                <Grid.Column width={4}>\n                    <Image src={`/classImages/${props.classNames}.jpg`} alternate='' fluid ui={false} />\n                </Grid.Column> \n            \n            <Grid.Column width={12}>\n            \n                <h2 style={{textAlign:\"left\",  borderBottom:\"1px solid black\"}}>\n                    {classData.name}<Button color='red' style={{marginLeft:\"10px\"}} onClick={() => handleSelection(classData.index)}>+select class</Button>\n                </h2>\n                <p style={{textAlign:\"left\", fontSize:\"14px\"}}>\n                Proficencies: {classProficiencies.map((proficiency, index) => {\n                  return <span key={index}>{proficiency.name + \" ♦ \"}</span> })}\n                </p>\n                <p style={{textAlign:\"left\", fontSize:\"14px\"}}>\n                    Features: {classFeatures.map((feature, index) => {\n                        return <span key={index}>{feature.name + \" ♦ \"}</span>\n                    })}\n                </p>\n                {/* This checks if the class can cast spells. If so, we render the details and make them clickable if you want to learn more. */}\n                {spellCaster && <><h2>As a spellcaster:</h2>\n                <p style={{textAlign:\"left\"}}>{spellCasterData.map((description, index) => {                        \n                    return <Accordion key={index}>\n                      <Accordion.Title\n                        active={accordionIndex === index}\n                        index={index}\n                        onClick={() =>handleAccordionClick(index)}\n                        style={{color: 'indigo'}}\n                                    >\n                        {description.name}   \n                      </Accordion.Title>\n                      <Accordion.Content active={accordionIndex === index}>                        \n                          {description.desc}                        \n                      </Accordion.Content>\n                    </Accordion>\n                    })} </p></>}\n                    \n            </Grid.Column>\n            </Grid.Row> \n            </Grid>\n        \n    )\n}","import React, { useEffect, useState } from 'react'\nimport { useSelector } from 'react-redux'\nimport { Header } from 'semantic-ui-react'\nimport ClassCard from './ClassCard'\n\nexport default function Classes() {\n    const [classNames, setClassNames] = useState([])\n    // dispatch = useDispatch()\n    const race = useSelector((state)=> state.race)\n\n    useEffect(() => {\n        fetch(`https://www.dnd5eapi.co/api/classes`)\n        .then(res => res.json())\n        .then(data => {\n            setClassNames(data.results);\n        })\n      }, [])\n    \n    return (\n        <div>\n            <Header as=\"h1\" style={{marginTop:\"5px\"}}>\n            You chose {race}.\n            <br />Now, choose your class.\n        </Header>\n            {classNames.map((classNames, index) => {\n                return <ClassCard classNames={classNames.index} key={index}/>\n            })}\n        </div>\n    )\n}","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport { Menu } from 'semantic-ui-react'\n\nexport default function DndHeader() {\n    const classSelection = useSelector(state=> state.classSelection)\n\n    function colorSelector(){\n      if(classSelection === 'barbarian') {\n        return 'red'\n      }\n      else if(classSelection === 'bard') {\n        return 'pink'\n      }\n      else if(classSelection === 'cleric') {\n        return 'green'\n      }\n      else if(classSelection === 'druid') {\n        return 'olive'\n      }\n      else if(classSelection === 'fighter') {\n        return 'grey'\n      }\n      else if(classSelection === 'monk') {\n        return 'blue'\n      }\n      else if(classSelection === 'paladin') {\n        return 'yellow'\n      }\n      else if(classSelection === 'ranger') {\n        return 'brown'\n      }\n      else if(classSelection === 'rogue') {\n        return 'black'\n      }\n      else if(classSelection === 'sorcerer') {\n        return 'teal'\n      }\n      else if(classSelection === 'warlock') {\n        return 'orange'\n      }\n      else if(classSelection === 'wizard') {\n        return 'purple'\n      }\n      else{\n        return 'red'\n      }\n    }\n\n    return (                     \n      <Menu inverted color={`${colorSelector()}`} style={{marginBottom:'0px', borderRadius:\"0px\"}}>\n        <Menu.Item as={Link} to='/'>  \n                Home\n        </Menu.Item>\n        <Menu.Item as={Link} to='/races'>\n                Thorge a Character\n        </Menu.Item>\n        <Menu.Item\n          name='Show Characters'\n          as={Link}\n          to='/characters'\n        />\n      </Menu>        \n    )\n}\n","import React, { useEffect } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport { Button, Header, Segment } from 'semantic-ui-react'\nimport { setClass } from '../../redux/actions'\n\nexport default function HomePage() {\n    const dispatch = useDispatch()\n    \n    useEffect(()=>{\n        dispatch(setClass(''))\n    })\n    \n    return (\n        <Segment color='black' inverted style={{borderRadius:\"0px\", marginTop:\"0px\", height:\"100vh\"}}>\n            \n            <Header style={{ marginTop:\"25vh\"}} as='h1'>\n                WELCOME TO THE THORGE\n            </Header>\n            <Header as=\"h4\">\n                (A character forge made by <a href='https://www.linkedin.com/in/thor-hlavaty-7589431b5/' rel=\"noreferrer\" target='_blank'>Thor Hlavaty</a>)\n            </Header>\n            <Link to=\"/races\">\n            <Button color=\"red\" style={{width:\"250px\", marginTop:\"5px\", border:\"solid 1px dimgrey\"}}>\n                Thorge a Character\n            </Button>\n            </Link>\n            <br />\n            <Button as={Link} to='/characters' color=\"red\" style={{marginTop:\"10px\", width:\"250px\", border:\"solid 1px dimgrey\"}}>\n                Show me that which is Thorged\n            </Button>\n        </Segment>\n    )\n}\n","//This is in many ways what I was dreading the most, but it actually turned out to be a bit easier than I expected!\n\nimport React  from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Form } from 'semantic-ui-react'\nimport {  setStatCalc } from '../../redux/actions'\n\nexport default function PointSpender(props) {\n    const dispatch = useDispatch()\n    const points = useSelector(state=> state.pointCalculator)\n    let usedPoints = 0\n    //See 'Attributes.js' for a brief explanation on what this does.\n    Object.keys(points).forEach(name => {usedPoints += points[name][0]})\n    \n    \n    function handleChange(e){\n        //This silly line converts the values from our 'options' to integers as opposed to strings. It then concats a third value, which is the final score.\n        dispatch(setStatCalc(props.name, e.target.value.split(',').map(x => parseInt(x, 10)).concat(e.target.value.split(',').map(x => parseInt(x, 10))[1] + props.racialBonus)))\n    }\n    \n    return (\n        <Form inverted>\n            \n            <Form.Field label={props.name + \" Score:\"} control='select' onChange={handleChange}>\n            <option value='0,8' defaultValue>8 (0 points)</option>\n            {/* This may not be the most elegant solution, but I'm proud of it.\n                What we do is create a turnery for each option. If you user doesn't have enough points, they can't select that option.\n                That way the user can never spend too much. Originally, I would only render the options that\n                the user had enough points for, but that created problems. */}\n            { usedPoints < 27 ?\n            <option value='1,9'>9 (1 point)</option> : <option disabled='disabled' value='1,9'>9 (1 point)</option>}\n            { usedPoints < 26 ?\n            <option value='2,10'>10 (2 points)</option> : <option disabled='disabled' value='2,10'>10 (2 points)</option>}\n            { usedPoints < 25 ?\n            <option value='3,11'>11 (3 points)</option> : <option disabled='disabled' value='3,11'>11 (3 points)</option>}\n            { usedPoints < 24 ?\n            <option value='4,12'>12 (4 points)</option> : <option disabled='disabled' value='4,12'>12 (4 points)</option>}\n            { usedPoints < 23 ?\n            <option value='5,13'>13 (5 points)</option> : <option disabled='disabled' value='5,13'>13 (5 points)</option>}\n            { usedPoints < 21 ?\n            <option value='7,14'>14 (7 points)</option> : <option disabled='disabled' value='7,14'>14 (7 points)</option>}\n            { usedPoints < 19 ?\n            <option value='9,15'>15 (9 points)</option> : <option disabled='disabled' value='9,15'>15 (9 points)</option>}\n            \n            </Form.Field>\n        </Form>\n    )\n}\n","import React, { useEffect, useState } from 'react'\nimport { useSelector } from 'react-redux'\nimport { Grid } from 'semantic-ui-react'\nimport PointSpender from './PointSpender'\n\nexport default function Attribute(props) {\n    const [racialBonus, setRacialBonus] = useState(0)\n    const race = useSelector((state)=> state.race)\n    const halfElfBonusStats = useSelector((state)=>state.halfElfBonusStats)\n\n\n    useEffect(()=>{\n        //Unfortunetly, the API doesn't have a great way of tracking race bonuses. It was either dig into the guts of the API, or just create the logic myself.\n        //I've played d&d, so inserting the logic was easy but tedious.\n        if (props.attribute === \"Strength\" && (race === 'human' || halfElfBonusStats.includes('str'))){\n            setRacialBonus(1)\n        }\n        else if (props.attribute === \"Dexterity\" && (race === 'human' || halfElfBonusStats.includes('dex'))){\n            setRacialBonus(1)\n        }\n        else if (props.attribute === \"Constitution\" && (race === 'human' || halfElfBonusStats.includes('con') || race==='half-orc' || race==='gnome')){\n            setRacialBonus(1)\n        }\n        else if (props.attribute === \"Wisdom\" && (race === 'human' || halfElfBonusStats.includes('wis') || race ==='dwarf' || race === 'halfling')){\n            setRacialBonus(1)\n        }\n        else if (props.attribute === \"Intelligence\" && (race === 'human' || halfElfBonusStats.includes('int') || race ==='elf' || race === 'tiefling')){\n            setRacialBonus(1)\n        }\n        else if (props.attribute === \"Charisma\" && (race === 'human' || race === 'dragonborn')){\n            setRacialBonus(1)\n        }\n        else if (props.attribute === \"Strength\" && (race === 'half-orc' || race === 'dragonborn')){\n            setRacialBonus(2)\n        }\n        else if (props.attribute === \"Dexterity\" && (race === 'elf' || race === 'halfling')){\n            setRacialBonus(2)\n        }\n        else if (props.attribute === \"Constitution\" && race === 'dwarf'){\n            setRacialBonus(2)\n        }\n        else if (props.attribute === \"Intelligence\" && (race === 'gnome' )){\n            setRacialBonus(2)\n        }\n        else if (props.attribute === \"Charisma\" && (race === 'tiefling' || race === 'half-elf')){\n            setRacialBonus(2)\n        }\n        \n    }, [race, props, halfElfBonusStats])\n    \n    return (        \n      <Grid.Column style={{marginTop:'8px'}}>\n          <PointSpender racialBonus={racialBonus} name={props.attribute} />\n          <div>Racial Bonus: {racialBonus}</div>\n      </Grid.Column>        \n    )\n}\n","import React, {  useState } from 'react'\nimport {  useSelector } from 'react-redux'\nimport { useHistory } from 'react-router-dom'\nimport { Button, Grid, Header } from 'semantic-ui-react'\nimport Attribute from './Attribute'\n\nexport default function Attributes() {\n    const [attributeArray] = useState(['Strength', 'Dexterity', 'Constitution', 'Wisdom', 'Intelligence', 'Charisma'])\n    const points = useSelector(state=> state.pointCalculator)\n    const name = useSelector(state=> state.name)\n    const race = useSelector(state=> state.race)\n    const classSelection = useSelector(state=> state.classSelection)\n    const str = useSelector(state=> state.pointCalculator['Strength'][state.pointCalculator['Strength'].length - 1])\n    const dex = useSelector(state=> state.pointCalculator['Dexterity'][state.pointCalculator['Dexterity'].length - 1])\n    const con = useSelector(state=> state.pointCalculator['Constitution'][state.pointCalculator['Constitution'].length - 1])\n    const wis = useSelector(state=> state.pointCalculator['Wisdom'][state.pointCalculator['Wisdom'].length - 1])\n    const int = useSelector(state=> state.pointCalculator['Intelligence'][state.pointCalculator['Intelligence'].length - 1])\n    const cha = useSelector(state=> state.pointCalculator['Charisma'][state.pointCalculator['Charisma'].length - 1])\n    const history = useHistory()\n    let usedPoints = 0\n    \n    //All this does is allow us to access the names of the pointCalculator as an array, so we can easily loop over it.\n    //That makes it easy to check how many points the user has used.\n    Object.keys(points).forEach(name => {usedPoints += points[name][0]})\n\n    \n    \n    \n    function submitHandler(){\n      if (name === '') {\n        alert('You must choose a name!')\n      } else if (usedPoints !== 27){\n        alert('You must spend all points!')\n      } else {\n        if(window.confirm(\"Are you sure you wish to confirm this Character?\")){\n          fetch('/api/v1/characters', {\n            method: 'POST',\n            body: JSON.stringify({\n                name: name,\n                race: race,\n                class: classSelection,\n                str: str,\n                dex: dex,\n                con: con,\n                wis: wis,\n                int: int,\n                cha: cha                \n            }),\n            headers: {\n                'Content-Type' : 'application/JSON'\n            }\n        })\n        .then(res =>res.json())\n        .then(() =>{\n          history.push('/characters')\n        })\n          }\n        } \n      }\n\n    return (\n        <>\n        <Header>\n            Your Character's Attrubutes:\n        </Header>\n        <div>\n          You have {27 - usedPoints} points left.\n        </div>\n        <Grid columns={3} style={{marginTop:\"10px\"}}>\n          <Grid.Row>\n            {attributeArray.map((attribute, index) => {\n                return <Grid columns={2} doubling key={index}><Attribute attribute={attribute} /></Grid>\n            })}\n          </Grid.Row>\n        </Grid>\n        <Button onClick={() => submitHandler()}>\n          Submit\n        </Button>\n        </>\n    )\n}\n","import React, { useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Button, Form } from 'semantic-ui-react'\nimport { setName } from '../../redux/actions'\n\nexport default function Name() {\n  const name = useSelector(state=> state.name)\n  const dispatch = useDispatch()\n  const [nameChange, setNameChange] = useState('')\n\n  function handleNameSelect(nameChange) {\n    dispatch(setName(nameChange))\n  }\n  return (\n    <Form inverted>\n              <Form.Field width=\"6\">\n                { name === '' &&\n                <h3>What will this character's name be?</h3>}\n                { name !== '' &&\n                <h3>This character's name is {name}.</h3>}\n                <input placeholder='Name' onChange={(e) => {setNameChange(e.target.value)}} style={{width:'250px'}}/>\n              </Form.Field>\n              <Button onClick={() => handleNameSelect(nameChange)}>Glory to their Name!</Button>\n            </Form>\n  )\n}\n","import React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport {  Header, Segment } from 'semantic-ui-react'\nimport {  setStatCalc } from '../../redux/actions'\nimport Attributes from './Attributes'\nimport Name from './Name'\n\nexport default function FinishingTouches() {\n    const race = useSelector((state)=> state.race)\n    const classSelection = useSelector((state)=> state.classSelection)\n    const dispatch = useDispatch()\n\n    \n    //This makes sure we have a clean stats array.\n    useEffect(()=>{\n          dispatch(setStatCalc('Strength', [0,8]))\n          dispatch(setStatCalc('Dexterity', [0,8]))\n          dispatch(setStatCalc('Constitution', [0,8]))\n          dispatch(setStatCalc('Wisdom', [0,8]))\n          dispatch(setStatCalc('Intelligence', [0,8]))\n          dispatch(setStatCalc('Charisma', [0,8]))\n  }, [ dispatch ])\n\n    return (\n      <div>\n        <Header as=\"h1\" style={{marginTop:\"5px\"}}>\n            I see, a{race === 'elf' && 'n'} {race} {classSelection}! <br /> Now for the finishing touches...\n        </Header>\n        <Segment textAlign='left' inverted>\n            <Name/>\n            <Attributes />\n        </Segment>\n      </div>\n    )\n}\n","import React from 'react'\nimport { useDispatch } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport { Button, Divider, Grid, Icon, Segment } from 'semantic-ui-react'\nimport { setCharSubmitted } from '../../redux/actions'\n\nexport default function Character(props) {\n  const dispatch = useDispatch()\n  \n  function colorSelector(){\n    if(props.character.class === 'barbarian') {\n      return 'red'\n    }\n    else if(props.character.class === 'bard') {\n      return 'pink'\n    }\n    else if(props.character.class === 'cleric') {\n      return 'green'\n    }\n    else if(props.character.class === 'druid') {\n      return 'olive'\n    }\n    else if(props.character.class === 'fighter') {\n      return 'grey'\n    }\n    else if(props.character.class === 'monk') {\n      return 'blue'\n    }\n    else if(props.character.class === 'paladin') {\n      return 'yellow'\n    }\n    else if(props.character.class === 'ranger') {\n      return 'brown'\n    }\n    else if(props.character.class === 'rogue') {\n      return 'black'\n    }\n    else if(props.character.class === 'sorcerer') {\n      return 'teal'\n    }\n    else if(props.character.class === 'warlock') {\n      return 'orange'\n    }\n    else if(props.character.class === 'wizard') {\n      return 'purple'\n    }\n  }\n  \n  function handleDelete(){\n      fetch(`/api/v1/characters/${props.character.id}`, {\n        method: 'DELETE'})\n        .then(res => {\n          dispatch(setCharSubmitted(false))\n          dispatch(setCharSubmitted(true))\n          }\n        )\n      }\n  \n\n  \n\n  return (\n    <Grid.Column>\n    <Segment inverted style={{paddingLeft:'2px', paddingTop:'1px', paddingBottom:'2px', paddingRight:'1px', textShadow:'2px 2px black'}}>\n      <Segment color={`${colorSelector()}`} inverted style={{marginBottom:\"0px\", borderBottomLeftRadius:'0px', borderBottomRightRadius:'0px', padding:'10px', borderBottom:'1px solid dimgray', fontSize:\"20px\"}}>\n        <Grid columns={2} as={Link} to={`/characters/${props.character.id}`} style={{color:'White'}}>\n          <Divider vertical hidden />\n          <Grid.Row>\n            <Grid.Column textAlign=\"left\" style={{borderRight:'1px solid dimgray'}}>\n              Character: \n            </Grid.Column>\n            <Grid.Column textAlign='right'>\n              {props.character.name}\n            </Grid.Column>            \n          </Grid.Row>\n        </Grid>\n      </Segment>\n      <Segment color={`${colorSelector()}`} inverted style={{marginTop:\"0px\", marginBottom:'0px', borderRadius:'0px', padding:'10px', borderBottom:'1px solid dimgray', fontSize:\"20px\"}}>\n        <Grid columns={2} as={Link} to={`/characters/${props.character.id}`} style={{color:'White'}}>\n          <Divider vertical hidden />\n          <Grid.Row>\n            <Grid.Column textAlign=\"left\"  style={{borderRight:'1px solid dimgray'}}>\n              Class: \n            </Grid.Column>\n            <Grid.Column textAlign='right'>\n              {props.character.class.charAt(0).toUpperCase()}{props.character.class.slice(1)}\n            </Grid.Column>            \n          </Grid.Row>\n        </Grid>\n      </Segment>\n      <Segment color={`${colorSelector()}`} inverted style={{marginTop:\"0px\", marginBottom:'0px', borderRadius:'0px', padding:'10px', borderBottom:'1px solid dimgray', fontSize:\"20px\"}}>\n        <Grid columns={2} as={Link} to={`/characters/${props.character.id}`} style={{color:'White'}}>\n          <Divider vertical hidden/>\n          <Grid.Row>\n            <Grid.Column textAlign=\"left\" style={{borderRight:'1px solid dimgray'}}> \n              Race: \n            </Grid.Column>\n            <Grid.Column textAlign='right'>\n              {props.character.race.charAt(0).toUpperCase()}{props.character.race.slice(1)}\n            </Grid.Column>            \n          </Grid.Row>\n        </Grid>\n      </Segment>\n      <Segment color={`${colorSelector()}`} inverted style={{marginTop:\"0px\", borderTopLeftRadius:'0px', borderTopRightRadius:'0px', padding:'10px', fontSize:\"20px\"}}>\n        <Grid columns={2}  style={{color:'White'}}>\n          <Divider vertical hidden/>\n          <Grid.Row>\n            <Grid.Column textAlign=\"left\" style={{borderRight:'1px solid dimgray'}}> \n              Delete Character? \n            </Grid.Column>\n            <Grid.Column  textAlign='right'>\n              <Button style={{paddingTop:'5px', paddingBottom:'0px', paddingLeft:'12px'}} icon onClick={() => handleDelete()} color={`${colorSelector()}`}><Icon name='user delete'/></Button>\n            </Grid.Column>            \n          </Grid.Row>\n        </Grid>\n      </Segment>\n    </Segment>\n</Grid.Column>\n  )\n}\n\n\n","import React, { useEffect, useState } from 'react'\nimport { useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { Grid, Header } from 'semantic-ui-react';\nimport Character from './Character';\n\nexport default function Characters() {\n  const [characters, setCharacters] = useState([])\n  const charSubmitted = useSelector(state => state.charSubmitted)\n  \n  useEffect(() => {\n    fetch('/api/v1/characters')\n      .then(res => res.json())\n      .then(data => {\n        if(charSubmitted){\n        setCharacters(data)\n      }\n      })\n  }, [charSubmitted])\n\n  \n  \n  return (\n    <div>\n      {characters.length === 0 && <Header style={{marginTop:'25vh'}} as='h2'>You've not created a character yet. Shall we <Link to='/races'>Thorge</Link> one?</Header>}\n      {characters.length !== 0 && <Header style={{marginTop:'5vh', textDecoration: 'underline'}} as='h1'>Your Characters:</Header>}\n      <Grid columns={2} stackable style={{margin:\"10px\"}}>\n      {characters.map(character => {\n        return <Character character={character} key={character.id} />\n        }\n      )}\n      </Grid>\n    </div>\n  )\n}\n","import React, { useEffect, useState } from 'react'\nimport { useSelector } from 'react-redux'\nimport { Accordion } from 'semantic-ui-react'\n\nexport default function ClassFeatures(props) {\n  const [classFeatures, setClassFeatures] = useState([])\n  const [spellCasterData, setSpellCasterData] = useState([])\n  const [spellCaster, setSpellcaster] = useState(false)\n  const [accordionIndex, setAccordionIndex] = useState(-1)\n  const [classProficiencies, setClassProficiencies] = useState([])\n  const classSelection = useSelector(state=>state.classSelection)\n  const [loaded, setLoaded] = useState(false)\n  \n  useEffect(() => {\n    fetch(`https://www.dnd5eapi.co/api/classes/${classSelection}`)\n      .then(res => res.json())\n      .then(data => {\n        setClassProficiencies(data.proficiencies)\n        if(data.spellcasting !== undefined){\n          setSpellcaster(true)\n          setSpellCasterData(data.spellcasting.info)\n        }\n      })\n      // The dnd API is a pretty spread out one, so we have to fetch twice in this component.\n      fetch(`https://www.dnd5eapi.co/api/classes/${classSelection}/levels`)\n      .then(res => res.json())\n      .then(data => {\n        setClassFeatures(data[0].features);\n        setLoaded(true)\n      })\n  }, [props, classSelection])\n\n  function handleAccordionClick(indexNum){\n    const newIndex = accordionIndex === indexNum ? -1 : indexNum\n    setAccordionIndex(newIndex)\n  }\n\n  return (\n    <>{loaded && <div>\n      <p>\n        Proficencies: {classProficiencies.map((proficiency, index) => {\n          return <span key={index}>{proficiency.name + \" ♦ \" }</span>})}\n      </p>\n      <p>\n        Features: {classFeatures.map((feature, index) => {\n          return <span key={index}> {feature.name + \" ♦ \"} </span>\n        })}\n      </p>\n      {spellCaster && <><h4>Spellcasting Abilities:</h4>\n        <p>{spellCasterData.map((description, index) => {                        \n            return <Accordion key={index}>\n              <Accordion.Title\n                active={accordionIndex === index}\n                index={index}\n                onClick={() =>handleAccordionClick(index)}\n                style={{color: 'indigo'}}\n                            >\n                {description.name}   \n              </Accordion.Title>\n              <Accordion.Content active={accordionIndex === index}>                        \n                  {description.desc}                        \n              </Accordion.Content>\n            </Accordion>\n            })} </p></>}\n          </div>}</>\n  )\n}\n","import React, { useEffect, useState } from 'react'\nimport { useSelector } from 'react-redux'\nimport { Container, Header } from 'semantic-ui-react'\n\nexport default function Equipment(props) {\n  const [equipment, setEquipment ] = useState([])\n  const [startingEquipment, setStartingEquipment] = useState([])\n  const classSelection = useSelector(state=>state.classSelection)\n\n\n  useEffect(() => {\n    fetch(`https://www.dnd5eapi.co/api/starting-equipment/${classSelection}`)\n    .then(res => res.json())\n    .then(data => {\n        setEquipment(data.starting_equipment)\n        setStartingEquipment(data.starting_equipment_options\n          .filter(option=>option.from[0]&& option.from[0].equipment)\n          .map(option => option.from[0].equipment.name))\n\n    })\n  }, [props, classSelection])\n  \n  return (\n    <>\n    <Header>\n      Equipment:\n    </Header>\n    <Container>\n      {equipment.map((item, index) => <span key={index}>{item.equipment.name + '♦'}</span>)}\n      {startingEquipment.map((item, index) => <span key={index}> {item + '♦'}</span>)}\n    </Container>\n    </>\n  )\n}\n","import React, { useEffect, useState } from 'react'\nimport { Container, Header } from 'semantic-ui-react'\n\nexport default function RacialTraits(props) {\n  const [traits, setTraits] = useState([])\n  const [proficiencies, setProficencies] = useState([])\n\n\n  useEffect(() => {\n    fetch(`https://www.dnd5eapi.co/api/races/${props.race}`)\n      .then(res => res.json())\n      .then(data => {\n        if(data.starting_proficiencies.length !== 0){\n        setProficencies(data.starting_proficiencies)\n        }\n        \n        if (data.traits !== undefined){\n          setTraits(data.traits)\n          }\n      }\n    )\n  }, [props.race])\n  \n  return (\n    <>\n    <Header>\n      Racial Traits\n    </Header>\n    {traits.length > 0 ? <Container>\n      Traits: {traits.map((trait, index) => {\n          return <span key={index}>{trait.name + \" ♦ \"}</span>\n        })}\n    </Container> : \n    <Container>\n      Traits: This character has no bonus racial traits.\n    </Container>\n    }\n    {proficiencies.length > 0 ?<Container>\n      Proficencies: {proficiencies.map((proficiency, index) => {\n          return <span key='index'>{proficiency.name + \" ♦ \" }</span>\n        })}\n    </Container>:\n    <Container>\n    Proficencies: This character has no bonus racial proficiencies.\n    </Container>}\n    </>\n  )\n}\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport {  Grid, Header, Segment } from 'semantic-ui-react'\nimport ClassFeatures from './ClassFeatures'\nimport Equipment from './Equipment'\nimport RacialTraits from './RacialTraits'\n\nexport default function CharacterStats(props) {\n  const className = useSelector(state=>state.class)\n  const circle = { width: 35, height: 35, fontSize:'10px', padding:'6px', margin:'auto', marginTop:'10px', border:'lightgray solid 1px', borderRadius:'50px' }\n  function modCalc(stat){\n    if(stat < 10){\n      return \"-1\"\n    }\n    else if(stat < 12){\n      return '0'\n    }\n    else{\n      return '+' + Math.floor((stat - 10)/2)\n    }\n  }\n  \n  return (\n    <>\n    <Grid.Row>\n      <Grid.Column width={2}>          \n        <Segment color='red' inverted>\n        Strength<br/>{props.stats[0]}<br/><Segment style={circle}>{modCalc(props.stats[0])}</Segment>\n        </Segment>\n      </Grid.Column>\n      <Grid.Column width={2}>\n        <Segment color='blue' inverted>\n        Dexterity<br/>{props.stats[1]}<br/><Segment style={circle}>{modCalc(props.stats[1])}</Segment>\n        </Segment>\n      </Grid.Column >\n      <Grid.Column width={12} only='computer tablet'>\n        <RacialTraits race={props.race}/>\n      </Grid.Column>\n    </Grid.Row>\n    <Grid.Row>\n    <Grid.Column width={2}>\n        <Segment color='brown' inverted>\n        Constitution<br/>{props.stats[2]}<br/><Segment style={circle}>{modCalc(props.stats[2])}</Segment>\n        </Segment>\n    </Grid.Column>\n    <Grid.Column width={2}>\n        <Segment color='purple' inverted>\n        Wisdom<br/>{props.stats[3]}<br/><Segment style={circle}>{modCalc(props.stats[3])}</Segment>\n        </Segment>\n    </Grid.Column>\n    <Grid.Column width={12} only='computer tablet'>\n        <Equipment className={className}/>\n    </Grid.Column>\n    </Grid.Row>\n    <Grid.Row>\n    <Grid.Column width={2}>\n        <Segment color='green' inverted>\n        Intelligence<br/>{props.stats[4]}<br/><Segment style={circle}>{modCalc(props.stats[4])}</Segment>\n        </Segment>\n    </Grid.Column>\n    <Grid.Column width={2}>\n        <Segment color='orange' inverted> \n        Charisma<br/>{props.stats[5]}<br/><Segment style={circle}>{modCalc(props.stats[5])}</Segment>\n        </Segment>\n      </Grid.Column>\n      <Grid.Column width={12} only='mobile'>\n        <RacialTraits race={props.race}/>\n      </Grid.Column>    \n      <Grid.Column width={12} only='mobile'>\n        <Equipment className={className}/>\n      </Grid.Column>\n      <Grid.Column width={12}>\n        <Header>\n          Class Features\n        </Header>\n        <ClassFeatures className={className} />\n      </Grid.Column> \n      </Grid.Row>\n      </>\n  )\n}\n","import React, { useEffect, useState } from 'react'\nimport { useDispatch } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport { Grid, Header, Segment } from 'semantic-ui-react';\nimport { setClass } from '../../redux/actions';\nimport CharacterStats from './CharacterStats';\n\nexport default function CharacterSheet() {\n  const [character, setCharacter ] = useState({});\n  const [statArray, setStatArray] = useState([])\n  const  [loaded, setLoaded] = useState(false)\n  const { id } = useParams();\n  const dispatch = useDispatch()\n  \n\n  useEffect(() => {\n      fetch(`/api/v1/characters/${id}`)\n      .then(res => res.json())\n      .then(data => {\n          setLoaded(false)\n          setCharacter(data);\n          setStatArray([data.str, data.dex, data.con, data.wis, data.int, data.cha])\n          dispatch(setClass(data.class))\n          setLoaded(true)\n      })    \n  }, [id, dispatch])\n  \n  return (\n    <>\n    { loaded && <Segment style={{margin:'20px'}}>\n      <Header as='h1'>\n      {character.name}, the {character.race.charAt(0).toUpperCase()}{character.race.slice(1)} {character.class.charAt(0).toUpperCase()}{character.class.slice(1)}\n      </Header>\n      <Grid celled stackable>\n        <CharacterStats race={character.race} stats={statArray} />\n      </Grid>\n    </Segment>}</>\n  )\n}\n","import './App.css';\nimport Races from './components/races/Races';\nimport Classes from './components/classes/Classes';\nimport DndHeader from './components/DndHeader/DndHeader';\nimport HomePage from './components/HomePage/HomePage';\nimport { Route, Switch } from 'react-router-dom';\nimport FinishingTouches from './components/FinishingTouches/FinishingTouches';\nimport Characters from './components/Characters/Characters';\nimport CharacterSheet from './components/CharacterSheet/CharacterSheet';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <DndHeader />\n      <Switch>\n      <Route path='/' exact component={HomePage} />\n      <Route path='/races' component={Races} />\n      <Route path='/classes' component={Classes} />\n      <Route path='/stats' component={FinishingTouches} />\n      <Route path='/characters' exact component={Characters} />\n      <Route path='/characters/:id'  component={CharacterSheet} />\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { combineReducers } from \"redux\";\n\nconst {  SET_RACE, SET_CLASS, SET_NAME, SET_HALFELFBONUSSTATS, RESET_HALFELFBONUSSTATS, SET_STATCALC, SET_CHARSUBMITTED, SET_BACKGROUND } = require(\"./actions\");\n\n\n\nfunction raceReducer(state='', action) {\n    switch (action.type) {\n        case SET_RACE:\n            return action.payload.race\n        \n        \n            \n            default:\n            return state;\n    }\n}\n\nfunction backgroundReducer(state='', action) {\n    switch (action.type) {\n        case SET_BACKGROUND:\n            return action.payload.background\n        \n        \n            \n            default:\n            return state;\n    }\n}\n\nfunction halfElfBonusStatsReducer(state=[], action){\n    switch (action.type) {\n        case SET_HALFELFBONUSSTATS:\n            return state.concat(action.payload.halfElfBonusStats)\n        \n        case RESET_HALFELFBONUSSTATS:\n            return []\n\n        default:\n            return state;\n    }\n}\n\nfunction classReducer(state='', action) {\n    switch (action.type) {\n        case SET_CLASS:\n            return action.payload.classSelection\n        \n        \n            \n            default:\n            return state;\n    }\n}\n\nfunction nameReducer(state='', action) {\n    switch (action.type) {\n        case SET_NAME:\n            return action.payload.name\n        \n        \n            \n            default:\n            return state;\n    }\n}\n\n\n\nfunction pointCalculatorReducer(state={\"Strength\":[0,8],\"Dexterity\":[0,8],\"Constitution\":[0,8],\"Wisdom\":[0,8],\"Intelligence\":[0,8],\"Charisma\":[0,8]}, action) {\n    switch (action.type) {\n        case SET_STATCALC:\n            return {...state, [action.payload.statName]:action.payload.pointValue}\n            \n            default:\n            return state;\n    }\n}\n\nfunction charSubmittedReducer(state=true, action) {\n    switch (action.type) {\n        case SET_CHARSUBMITTED:\n            return action.payload.charSubmitted\n        \n        \n            \n            default:\n            return state;\n    }\n}\n\nexport const rootReducer = combineReducers({\n    race: raceReducer,\n    classSelection: classReducer,\n    name: nameReducer,\n    halfElfBonusStats: halfElfBonusStatsReducer,\n    pointCalculator: pointCalculatorReducer,\n    charSubmitted: charSubmittedReducer,\n    background: backgroundReducer\n})","import { createStore } from \"redux\"\nimport { rootReducer } from \"./reducers\"\n    \nexport const store = createStore(\n    rootReducer,\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n    \n)","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { store } from './redux/store';\n\nReactDOM.render(\n    <Provider store={store}>\n    <Router>\n    <App />\n    </Router>\n    </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}